{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/manifest.json","webpack:///./src/controllers/config.js","webpack:///./src/controllers/tx-scanner.js","webpack:///./src/controllers/state.js","webpack:///./src/controllers/background.js","webpack:///./src/background.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","config","chains","chainId","nodeUrl","tx_scanner_AergoscanTransactionScanner","AergoscanTransactionScanner","_classCallCheck","this","_createClass","wallet","next","_ref2","_asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","account","blockno","limit","address","q","size","offset","url","response","wrap","_context","prev","spec","abrupt","herajs","console","log","concat","encodeURIComponent","fetch","sent","json","hits","total","map","tx","herajs_wallet_iife","hash","from","meta","to","ts","blockhash","amount","type","status","Status","Confirmed","stop","_x","arguments","_this","_ref3","_callee3","accountSpec","_ref4","bestHeight","_context3","accountManager","getCompleteAccountSpec","getClient","blockchain","fetchAccountTransactionsBefore","_callee2","_context2","_x2","state","State","state_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_idleTimeout","set","events","nextState","_this2","clearTimeout","setTimeout","emit","background","BackgroundController","background_classCallCheck","background_possibleConstructorReturn","background_getPrototypeOf","id","extensionizer_default","a","runtime","uiState","popupOpen","_lockTimeout","appName","instanceId","use","useStorage","store","then","background_asyncToGenerator","customChains","_arr","_i","firstLoad","datastore","getIndex","keys","useChain","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","done","chain","err","return","keyManager","on","unlocked","pause","transactionManager","resume","lock","getAccounts","accounts","_iterator2","_iteratorNormalCompletion2","_step2","trackAccount","passphrase","unlock","keepUnlocked","setupAndUnlock","onceCb","_this3","accountTracker","removeAllListeners","outStream","_this4","dnode","browser_default","_unlock2","_callee5","send","password","_context5","error","_x3","_x4","_lock","_callee6","_context6","_x5","setup","_setup","_callee7","_context7","_x6","_x7","isUnlocked","_isUnlocked","_callee8","_context8","_x8","reset","_reset","_callee9","_context9","open","clear","_x9","addNetwork","_addNetwork","_callee10","_context10","put","_x10","_x11","getBlockchainStatus","_getBlockchainStatus","_callee11","_context11","blockHeight","defaultChainId","_x12","_getAccounts","_callee12","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context12","finish","_x13","createAccount","_createAccount","_callee13","_ref5","_context13","_x14","_x15","importAccount","_importAccount","_callee14","_ref6","privateKey","identity","_context14","herajs_crypto_umd","addAccount","importKey","_x16","_x17","exportAccount","_exportAccount","_callee15","_ref7","privkeyEncrypted","_context15","getOrAddAccount","getKey","_x18","_x19","sendTransaction","_sendTransaction","_callee16","txTracker","_context16","transaction","txBody","message","_x20","_x21","_x22","getAccountTx","_getAccountTx","_callee17","txs","_context17","getAccountTransactions","sort","b","_x23","_x24","syncAccountState","_syncAccountState","_callee18","_context18","_x25","_x26","signMessage","_signMessage","_callee19","_ref8","signedMessage","_context19","buffer","_x27","_x28","pump_default","remote","sendUpdate","controller","connectRemote","remotePort","processName","portStream","extension_port_stream_default","setupCommunication","end_of_stream_default","onConnect","addListener","setupController","chrome","contextMenus","removeAll","title","contexts","onclick","tabs"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,aAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,MAAA,QAEAU,0BCtJAY,EAAAD,QAAiBJ,EAAA8B,EAAuB,6LCAzBK,GACXC,SAEQC,QAAS,mBACTC,QAAS,iCAGTD,QAAS,gBACTC,QAAS,iCAGTD,QAAS,sBACTC,QAAS,oCAGTD,QAAS,YACTC,QAAS,0gBCRd,IAAMC,EAAb,oBAAAC,iGAAAC,CAAAC,KAAAF,GAAA,qDAAAG,CAAAH,IAAAf,IAAA,gCAAAN,MAAA,SACkCyB,GAC1B,OAAO,SAACC,GAAD,sBAAAC,EAAAC,EAAAC,mBAAAC,KAAU,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAjB,EAAAkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvF,EAAA,OAAA2E,mBAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAjB,MAAA,UAASO,EAATD,EAASC,QAASC,EAAlBF,EAAkBE,QAASC,EAA3BH,EAA2BG,MAExB,sBADVjB,EAAUe,EAAQ/E,KAAK2F,KAAK3B,UACgB,kBAAZA,EAFzB,CAAAyB,EAAAjB,KAAA,eAAAiB,EAAAG,OAAA,SAGFpB,GAAOO,UAASC,UAASC,WAHvB,cAKPC,EAAU,IAAIW,EAAA,QAAQd,EAAQ/E,KAAK2F,KAAKT,SAC9CY,QAAQC,IAAR,oCAAAC,OAAgDd,EAAhD,QAAAc,OAA8DhC,EAA9D,WAAAgC,OAA+EhB,EAA/E,QACMG,EAAIc,mBAAkB,SAAAD,OAAUd,EAAV,WAAAc,OAA2Bd,EAA3B,mBAAAc,OAAoDhB,IAE1EI,EAAO,IACPC,EAAS,EACTC,EAXO,GAAAU,OAQG,mCARH,oBAAAA,OAW4Bb,EAX5B,4BAAAa,OAWwDZ,EAXxD,UAAAY,OAWqEX,GAXrEI,EAAAjB,KAAA,GAYU0B,MAAMZ,GAZhB,eAYPC,EAZOE,EAAAU,KAAAV,EAAAjB,KAAA,GAaMe,EAASa,OAbf,eAaPpG,EAbOyF,EAAAU,KAcbL,QAAQC,IAAR,uBAAAC,OAAmChG,EAAKqG,KAAK7F,OAA7C,SAAAwF,OAA2DhG,EAAKsG,MAAhE,cAAAN,OAAkFd,EAAlF,WAAAc,OAAmGhB,EAAnG,MAdaS,EAAAG,OAAA,SAeN5F,EAAKqG,KAAKE,IAAI,SAAAC,GAAE,OAAI,IAAIC,EAAA,YAAYD,EAAGE,MAC1C1C,UACA2C,KAAMH,EAAGI,KAAKD,KACdE,GAAIL,EAAGI,KAAKC,GACZH,KAAMF,EAAGE,KACTI,GAAIN,EAAGI,KAAKE,GACZC,UAAW,GACX/B,QAASwB,EAAGI,KAAK5B,QACjBgC,OAAQR,EAAGI,KAAKI,OAChBC,KAAMT,EAAGI,KAAKK,KACdC,OAAQT,EAAA,YAAYU,OAAOC,eAzBlB,yBAAA3B,EAAA4B,SAAAxC,EAAAR,SAAV,gBAAAiD,GAAA,OAAA7C,EAAAtD,MAAAkD,KAAAkD,YAAA,OAFfnE,IAAA,2BAAAN,MAAA,SAgC6ByB,GAAQ,IAAAiD,EAAAnD,KAC7B,OAAO,iCAAAoD,EAAA/C,EAAAC,mBAAAC,KAAM,SAAA8C,EAAO3C,GAAP,IAAA4C,EAAAC,EAAAC,EAAA,OAAAlD,mBAAAa,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAtD,MAAA,cACHmD,EAAcpD,EAAOwD,eAAeC,uBAAuBjD,EAAQ/E,KAAK2F,MADrEmC,EAAAtD,KAAA,EAEoBD,EAAO0D,UAAUN,EAAY3D,SAASkE,aAF1D,cAAAN,EAAAE,EAAA3B,KAED0B,EAFCD,EAEDC,WAFCC,EAAAlC,OAAA,SAGF4B,EAAKW,+BAA+B5D,EAApCiD,CAAA9C,EAAAC,mBAAAC,KAA4C,SAAAwD,IAAA,OAAAzD,mBAAAa,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA7D,MAAA,cAAA6D,EAAAzC,OAAA,qCAAAyC,EAAAhB,SAAAe,EAAA/D,SAA5CmD,EAA8DzC,UAASC,QAAS6C,KAH9E,wBAAAC,EAAAT,SAAAK,EAAArD,SAAN,gBAAAiE,GAAA,OAAAb,EAAAtG,MAAAkD,KAAAkD,YAAA,QAjCfpD,EAAA,kzBCNA,IAsCeoE,cAnCX,SAAAC,IAAc,IAAAhB,EAAA,mGAAAiB,CAAApE,KAAAmE,IACVhB,EAAAkB,EAAArE,KAAAsE,EAAAH,GAAA1H,KAAAuD,QACKuE,aAAe,KACpBpB,EAAKqB,IAAI,WAHCrB,8OADEsB,EAAA,6FAaZC,GAAW,IAAAC,EAAA3E,KACM,YAAb0E,GACI1E,KAAKuE,cACLK,aAAa5E,KAAKuE,cAGtBvE,KAAKkE,OAASQ,GAA0B,YAAbA,IACvB1E,KAAKuE,cACLK,aAAa5E,KAAKuE,cAEtBvE,KAAKuE,aAAeM,WAAW,WAC3BF,EAAKH,IAAI,SA1BJ,MA6BTxE,KAAKkE,OAASQ,GACdjD,QAAQC,IAAR,WAAAC,OAAuB3B,KAAKkE,MAA5B,QAAAvC,OAAwC+C,IAE5C1E,KAAKkE,MAAQQ,EACb1E,KAAK8E,KAAK,SAAUJ,GACpB1E,KAAK8E,KAAKJ,moCCPlB,IAoReK,cAjRX,SAAAC,IAAc,IAAA7B,+FAAA8B,CAAAjF,KAAAgF,IACV7B,EAAA+B,EAAAlF,KAAAmF,EAAAH,GAAAvI,KAAAuD,QAEKoF,GAAKC,EAAAC,EAAUC,QAAQH,GAE5BjC,EAAKqC,SACDC,WAAW,GAEftC,EAAKe,MAAQ,IAAIA,EACjBf,EAAKuC,aAAe,KAEpBvC,EAAKjD,OAAS,IAAIkC,EAAA,QACduD,QAAS,uBACTC,WAAYzC,EAAKiC,KAErBjC,EAAKjD,OAAO2F,IAAIhG,GAChBsD,EAAKjD,OAAO4F,WAAWC,EAAA,GAAOC,KAA9BC,EAAA3F,mBAAAC,KAAmC,SAAAC,IAAA,IAAA0F,EAAAC,EAAAC,EAAAzG,EAAA,OAAAW,mBAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAjB,MAAA,cAC/BgD,EAAKkD,YAD0BjF,EAAAC,KAAA,EAAAD,EAAAjB,KAAA,EAIAgD,EAAKjD,OAAOoG,UAAUC,SAAS,YAAYlI,IAAI,gBAJ/C,OAK3B,IADM6H,EAJqB9E,EAAAU,KAAAqE,EAKP7J,OAAOkK,KAAKN,EAAavK,MAA7CyK,EAAA,EAAAA,EAAAD,EAAAhK,OAAAiK,IAASzG,EAA2CwG,EAAAC,GAChDjD,EAAKjD,OAAOuG,UAAW9G,UAASC,QAASsG,EAAavK,KAAKgE,GAASC,UAN7CwB,EAAAjB,KAAA,gBAAAiB,EAAAC,KAAA,EAAAD,EAAAsF,GAAAtF,EAAA,kCAAAA,EAAA4B,SAAAxC,EAAAR,OAAA,WAhBzB,IAAA2G,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IA4BV,QAAAC,EAAAC,EAAkBvH,EAAOC,OAAzBnB,OAAA0I,cAAAN,GAAAI,EAAAC,EAAA7G,QAAA+G,MAAAP,GAAA,EAAiC,KAAxBQ,EAAwBJ,EAAAtI,MAC7B0E,EAAKjD,OAAOuG,SAASU,IA7Bf,MAAAC,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAK,EAAAK,QAAAL,EAAAK,SAAA,WAAAT,EAAA,MAAAC,GAAA,OAgCV1D,EAAKjD,OAAOoH,WAAWC,GAAG,OAAQ,WAC9BpE,EAAK2B,KAAK,UAAY0C,UAAU,IAChC/F,QAAQC,IAAI,mBAEhByB,EAAKjD,OAAOoH,WAAWC,GAAG,SAAU,WAChCpE,EAAK2B,KAAK,UAAY0C,UAAU,IAChC/F,QAAQC,IAAI,qBAGhByB,EAAKe,MAAMqD,GAAG,OAAQ,WAClB9F,QAAQC,IAAI,kCACZyB,EAAKjD,OAAOwD,eAAe+D,QAC3BtE,EAAKjD,OAAOwH,mBAAmBD,UAEnCtE,EAAKe,MAAMqD,GAAG,SAAU,WACpB9F,QAAQC,IAAI,qCACZyB,EAAKjD,OAAOwD,eAAeiE,SAC3BxE,EAAKjD,OAAOwH,mBAAmBC,WAGnCxE,EAAKyE,OApDKzE,8OADiBsB,EAAA,mQAyDJzE,KAAKE,OAAOwD,eAAemE,qBAClD,IADMC,qCACNC,EAAoBD,EAApBvJ,OAAA0I,cAAAe,GAAAC,EAAAF,EAAA5H,QAAA+G,MAAAc,GAAA,EAAStH,EAAqBuH,EAAAxJ,MAC1BuB,KAAKkI,aAAaxH,iYAKtBV,KAAKE,OAAO0H,mFAGFO,kGACJnI,KAAKE,OAAOkI,OAAOD,UACzBnI,KAAKqI,sMAGaF,kGACZnI,KAAKE,OAAOoI,eAAeH,UACjCnI,KAAKqI,yJAGM,IAAA1D,EAAA3E,KACPA,KAAK0F,cACLd,aAAa5E,KAAK0F,cAEtB1F,KAAK0F,aAAeb,WAAW,WAC3BpD,QAAQC,IAAI,0BACZiD,EAAKiD,QArFS,wCA0FlB,OAAO5H,KAAKwF,QAAQC,+CAGX/E,EAAS6H,GAAQ,IAAAC,EAAAxI,KACpByI,EAAiBzI,KAAKE,OAAOwD,eAAewE,aAAaxH,GAC/DV,KAAKE,OAAOwH,mBAAmBQ,aAAaxH,GAC5C+H,EAAezC,KAAK,SAAAtH,GAChBA,EAAEgK,mBAAmB,UACrBhK,EAAE6I,GAAG,SAAU,SAAA7G,GACXe,QAAQC,IAAI,gBAAiBhB,GAC7B8H,EAAK1D,KAAK,UAAYgD,UAAWpH,KAC7B6H,IACAA,EAAO7H,GACP6H,GAAS,kDAMLI,GAAW,IAAAC,EAAA5I,KAErB6I,EAAQC,KACVV,OAAM,eAAAW,EAAA9C,EAAA3F,mBAAAC,KAAE,SAAAyI,EAAA5I,EAAqB6I,GAArB,IAAAC,EAAA,OAAA5I,mBAAAa,KAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAAhJ,MAAA,cAAS+I,EAAT9I,EAAS8I,SAATC,EAAA9H,KAAA,EAAA8H,EAAAhJ,KAAA,EAEMyI,EAAKR,OAAOc,GAFlB,OAAAC,EAAAhJ,KAAA,uBAAAgJ,EAAA9H,KAAA,EAAA8H,EAAAzC,GAAAyC,EAAA,SAIA1H,QAAQ2H,MAARD,EAAAzC,IACAuC,GAAOG,MAAO,GAAAD,EAAAzC,KALdyC,EAAA5H,OAAA,kBAQJ0H,MARI,yBAAAE,EAAAnG,SAAAgG,EAAAhJ,OAAA,UAAF,gBAAAqJ,EAAAC,GAAA,OAAAP,EAAAjM,MAAAkD,KAAAkD,YAAA,GAUN0E,KAAI,eAAA2B,EAAAtD,EAAA3F,mBAAAC,KAAE,SAAAiJ,EAAOP,GAAP,OAAA3I,mBAAAa,KAAA,SAAAsI,GAAA,cAAAA,EAAApI,KAAAoI,EAAAtJ,MAAA,OACFyI,EAAKhB,OACLqB,MAFE,wBAAAQ,EAAAzG,SAAAwG,EAAAxJ,SAAF,gBAAA0J,GAAA,OAAAH,EAAAzM,MAAAkD,KAAAkD,YAAA,GAIJyG,MAAK,eAAAC,EAAA3D,EAAA3F,mBAAAC,KAAE,SAAAsJ,EAAAzG,EAAqB6F,GAArB,IAAAC,EAAA,OAAA5I,mBAAAa,KAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAA3J,MAAA,cAAS+I,EAAT9F,EAAS8F,SAATY,EAAA3J,KAAA,EACGyI,EAAKN,eAAeY,GADvB,OAEHD,MAFG,wBAAAa,EAAA9G,SAAA6G,EAAA7J,SAAF,gBAAA+J,EAAAC,GAAA,OAAAJ,EAAA9M,MAAAkD,KAAAkD,YAAA,GAIL+G,WAAU,eAAAC,EAAAjE,EAAA3F,mBAAAC,KAAE,SAAA4J,EAAOlB,GAAP,OAAA3I,mBAAAa,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAAjK,MAAA,OACR8I,EAAKL,EAAK1I,OAAOsH,UADT,wBAAA4C,EAAApH,SAAAmH,EAAAnK,SAAF,gBAAAqK,GAAA,OAAAH,EAAApN,MAAAkD,KAAAkD,YAAA,GAGVoH,MAAK,eAAAC,EAAAtE,EAAA3F,mBAAAC,KAAE,SAAAiK,EAAOvB,GAAP,OAAA3I,mBAAAa,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAtK,MAAA,cAAAsK,EAAAtK,KAAA,EACG4F,EAAA,EAAM2E,OADT,cAAAD,EAAAtK,KAAA,EAEG4F,EAAA,EAAMQ,SAAS,YAAYoE,QAF9B,cAAAF,EAAAtK,KAAA,EAGG4F,EAAA,EAAMQ,SAAS,gBAAgBoE,QAHlC,cAAAF,EAAAtK,KAAA,EAIG4F,EAAA,EAAMQ,SAAS,YAAYoE,QAJ9B,cAAAF,EAAAtK,KAAA,GAKG4F,EAAA,EAAMQ,SAAS,QAAQoE,QAL1B,QAMH1B,IANG,yBAAAwB,EAAAzH,SAAAwH,EAAAxK,SAAF,gBAAA4K,GAAA,OAAAL,EAAAzN,MAAAkD,KAAAkD,YAAA,GAQL2H,WAAU,eAAAC,EAAA7E,EAAA3F,mBAAAC,KAAE,SAAAwK,EAAAxH,EAA6B0F,GAA7B,IAAAtJ,EAAAC,EAAAF,EAAA,OAAAY,mBAAAa,KAAA,SAAA6J,GAAA,cAAAA,EAAA3J,KAAA2J,EAAA7K,MAAA,cAASR,EAAT4D,EAAS5D,QAASC,EAAlB2D,EAAkB3D,QAC1B6B,QAAQC,IAAI,gBAAkB/B,UAASC,YACvCgJ,EAAK1I,OAAOuG,UAAW9G,UAASC,YAC5BF,KAHIsL,EAAA3J,KAAA,EAAA2J,EAAA7K,KAAA,EAKYyI,EAAK1I,OAAOoG,UAAUC,SAAS,YAAYlI,IAAI,gBAL3D,OAKJqB,EALIsL,EAAAlJ,KAK4EnG,KAL5EqP,EAAA7K,KAAA,iBAAA6K,EAAA3J,KAAA,GAAA2J,EAAAtE,GAAAsE,EAAA,wBASRtL,EAAOC,IAAaA,UAASC,WATrBoL,EAAA7K,KAAA,GAUFyI,EAAK1I,OAAOoG,UAAUC,SAAS,YAAY0E,KAC7ClM,IAAK,eACLpD,KAAM+D,IAZF,QAcRuJ,MAdQ,yBAAA+B,EAAAhI,SAAA+H,EAAA/K,OAAA,WAAF,gBAAAkL,EAAAC,GAAA,OAAAL,EAAAhO,MAAAkD,KAAAkD,YAAA,GAgBVkI,oBAAmB,eAAAC,EAAApF,EAAA3F,mBAAAC,KAAE,SAAA+K,EAAOrC,GAAP,IAAApG,EAAA,OAAAvC,mBAAAa,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAApL,MAAA,cAAAoL,EAAApL,KAAA,EACIyI,EAAK1I,OAAO0D,YAAYC,aAD5B,OACXhB,EADW0I,EAAAzJ,KAEjBmH,GACIuC,YAAa3I,EAAOW,WACpB7D,QAASiJ,EAAK1I,OAAOuL,iBAJR,wBAAAF,EAAAvI,SAAAsI,EAAAtL,SAAF,gBAAA0L,GAAA,OAAAL,EAAAvO,MAAAkD,KAAAkD,YAAA,GAOnB2E,YAAW,eAAA8D,EAAA1F,EAAA3F,mBAAAC,KAAE,SAAAqL,EAAO3C,GAAP,IAAAnB,EAAA+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvL,EAAA,OAAAJ,mBAAAa,KAAA,SAAA+K,GAAA,cAAAA,EAAA7K,KAAA6K,EAAA/L,MAAA,cACTyI,EAAKP,eADI6D,EAAA/L,KAAA,EAEcyI,EAAK1I,OAAOwD,eAAemE,cAFzC,OAGT,IADMC,EAFGoE,EAAApK,KAAA+J,GAAA,EAAAC,GAAA,EAAAC,OAAAjF,EAAAoF,EAAA7K,KAAA,EAGT2K,EAAoBlE,EAApBvJ,OAAA0I,cAAA4E,GAAAI,EAAAD,EAAA7L,QAAA+G,MAAA2E,GAAA,EAASnL,EAAqBuL,EAAAxN,MAC1BmK,EAAKV,aAAaxH,GAJbwL,EAAA/L,KAAA,iBAAA+L,EAAA7K,KAAA,GAAA6K,EAAAxF,GAAAwF,EAAA,SAAAJ,GAAA,EAAAC,EAAAG,EAAAxF,GAAA,QAAAwF,EAAA7K,KAAA,GAAA6K,EAAA7K,KAAA,GAAAwK,GAAA,MAAAG,EAAA3E,QAAA2E,EAAA3E,SAAA,WAAA6E,EAAA7K,KAAA,IAAAyK,EAAA,CAAAI,EAAA/L,KAAA,eAAA4L,EAAA,eAAAG,EAAAC,OAAA,mBAAAD,EAAAC,OAAA,YAMTlD,EAAKnB,GANI,yBAAAoE,EAAAlJ,SAAA4I,EAAA5L,OAAA,6BAAF,gBAAAoM,GAAA,OAAAT,EAAA7O,MAAAkD,KAAAkD,YAAA,GAQXmJ,cAAa,eAAAC,EAAArG,EAAA3F,mBAAAC,KAAE,SAAAgM,EAAAC,EAAoBvD,GAApB,IAAAtJ,EAAAe,EAAA,OAAAJ,mBAAAa,KAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAtM,MAAA,cAASR,EAAT6M,EAAS7M,QACpBiJ,EAAKP,eADMoE,EAAAtM,KAAA,EAGWyI,EAAK1I,OAAOwD,eAAe2I,cAAc1M,GAHpD,OAGLe,EAHK+L,EAAA3K,KAIX8G,EAAKV,aAAaxH,GAClBuI,EAAKvI,EAAQ/E,KAAK2F,MALP,wBAAAmL,EAAAzJ,SAAAuJ,EAAAvM,SAAF,gBAAA0M,EAAAC,GAAA,OAAAL,EAAAxP,MAAAkD,KAAAkD,YAAA,GAOb0J,cAAa,eAAAC,EAAA5G,EAAA3F,mBAAAC,KAAE,SAAAuM,EAAAC,EAAgC9D,GAAhC,IAAA+D,EAAArN,EAAAsN,EAAApM,EAAAH,EAAA,OAAAJ,mBAAAa,KAAA,SAAA+L,GAAA,cAAAA,EAAA7L,KAAA6L,EAAA/M,MAAA,cAAS6M,EAATD,EAASC,WAAYrN,EAArBoN,EAAqBpN,QAChCiJ,EAAKP,eACC4E,EAAW3Q,OAAA6Q,EAAA,uBAAA7Q,CAAuB0Q,GAClCnM,EAAUoM,EAASpM,QAHdqM,EAAA7L,KAAA,EAAA6L,EAAA/M,KAAA,EAKeyI,EAAK1I,OAAOwD,eAAe0J,YAAavM,UAASlB,YALhE,cAKDe,EALCwM,EAAApL,KAMPL,QAAQC,IAAI,gBAAiBhB,EAASsM,GAN/BE,EAAA/M,KAAA,GAODyI,EAAK1I,OAAOoH,WAAW+F,WACzB3M,QAASA,EACTsM,WAAYA,IATT,QAWPpE,EAAKV,aAAaxH,GAClBuI,EAAKvI,EAAQ/E,KAAK2F,MAZX4L,EAAA/M,KAAA,iBAAA+M,EAAA7L,KAAA,GAAA6L,EAAAxG,GAAAwG,EAAA,SAcPzL,QAAQ2H,MAAR8D,EAAAxG,IACAuC,GAAOG,MAAO,6BAAA8D,EAAAxG,KAfP,yBAAAwG,EAAAlK,SAAA8J,EAAA9M,OAAA,WAAF,gBAAAsN,EAAAC,GAAA,OAAAV,EAAA/P,MAAAkD,KAAAkD,YAAA,GAkBbsK,cAAa,eAAAC,EAAAxH,EAAA3F,mBAAAC,KAAE,SAAAmN,EAAAC,EAAuC1E,GAAvC,IAAApI,EAAAlB,EAAAuJ,EAAAxI,EAAA3B,EAAAiO,EAAAY,EAAA,OAAAtN,mBAAAa,KAAA,SAAA0M,GAAA,cAAAA,EAAAxM,KAAAwM,EAAA1N,MAAA,cAASU,EAAT8M,EAAS9M,QAASlB,EAAlBgO,EAAkBhO,QAASuJ,EAA3ByE,EAA2BzE,SACtCN,EAAKP,eADMwF,EAAA1N,KAAA,EAEWyI,EAAK1I,OAAOwD,eAAeoK,iBAAkBjN,UAASlB,YAFjE,cAELe,EAFKmN,EAAA/L,KAAA+L,EAAA1N,KAAA,EAGOyI,EAAK1I,OAAOoH,WAAWyG,OAAOrN,GAHrC,cAGL3B,EAHK8O,EAAA/L,KAIXL,QAAQC,IAAIhB,EAAS3B,GACfiO,EAAajO,EAAIpD,KAAKqR,WALjBa,EAAA1N,KAAA,GAeoB7D,OAAA6Q,EAAA,kBAAA7Q,CAAkB0Q,EAAY9D,GAflD,QAeL0E,EAfKC,EAAA/L,KAgBXmH,GAAM+D,WAAY1Q,OAAA6Q,EAAA,iBAAA7Q,CAAiBsR,KAhBxB,yBAAAC,EAAA7K,SAAA0K,EAAA1N,SAAF,gBAAAgO,EAAAC,GAAA,OAAAR,EAAA3Q,MAAAkD,KAAAkD,YAAA,GAkBbgL,gBAAe,eAAAC,EAAAlI,EAAA3F,mBAAAC,KAAE,SAAA6N,EAAOjM,EAAIxC,EAASsJ,GAApB,IAAAoF,EAAA,OAAA/N,mBAAAa,KAAA,SAAAmN,GAAA,cAAAA,EAAAjN,KAAAiN,EAAAnO,MAAA,cACbyI,EAAKP,eADQiG,EAAAjN,KAAA,EAAAiN,EAAAnO,KAAA,EAGeyI,EAAK1I,OAAOgO,iBAChCrN,QAASsB,EAAGG,KACZ3C,QAASA,GACVwC,GANM,OAGHkM,EAHGC,EAAAxM,KAOTL,QAAQC,IAAI2M,EAAWA,EAAUE,YAAYC,QAC7CvF,GAAO9G,GAAIkM,EAAUE,YAAYC,SARxBF,EAAAnO,KAAA,gBAAAmO,EAAAjN,KAAA,EAAAiN,EAAA5H,GAAA4H,EAAA,SAUT7M,QAAQ2H,MAARkF,EAAA5H,IACAuC,GAAOG,MAAOkF,EAAA5H,GAAE+H,SAAW,GAAAH,EAAA5H,KAXlB,yBAAA4H,EAAAtL,SAAAoL,EAAApO,OAAA,UAAF,gBAAA0O,EAAAC,EAAAC,GAAA,OAAAT,EAAArR,MAAAkD,KAAAkD,YAAA,GAcf2L,aAAY,eAAAC,EAAA7I,EAAA3F,mBAAAC,KAAE,SAAAwO,EAAOzL,EAAa2F,GAApB,IAAA+F,EAAA,OAAA1O,mBAAAa,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAA9O,MAAA,UACVsB,QAAQC,IAAI,eAAgB4B,GACvBA,EAAYzC,QAFP,CAAAoO,EAAA9O,KAAA,eAAA8O,EAAA1N,OAAA,SAEuB0H,OAFvB,cAAAgG,EAAA9O,KAAA,EAGQyI,EAAK1I,OAAOwH,mBAAmBwH,uBAAuB5L,GAH9D,QAGJ0L,EAHIC,EAAAnN,MAINqN,KAAK,SAAC7J,EAAG8J,GAAJ,OAAW9J,EAAE3J,KAAK8G,GAAK2M,EAAEzT,KAAK8G,GAAK,EAAK6C,EAAE3J,KAAK8G,IAAM2M,EAAEzT,KAAK8G,GAAK,GAAK,IAC/EwG,EAAK+F,GALK,wBAAAC,EAAAjM,SAAA+L,EAAA/O,SAAF,gBAAAqP,EAAAC,GAAA,OAAAR,EAAAhS,MAAAkD,KAAAkD,YAAA,GAOZqM,iBAAgB,eAAAC,EAAAvJ,EAAA3F,mBAAAC,KAAE,SAAAkP,EAAOnM,EAAa2F,GAApB,IAAAvI,EAAA,OAAAJ,mBAAAa,KAAA,SAAAuO,GAAA,cAAAA,EAAArO,KAAAqO,EAAAvP,MAAA,UACTmD,EAAYzC,QADH,CAAA6O,EAAAvP,KAAA,eAAAuP,EAAAnO,OAAA,SACmB0H,OADnB,cAAAyG,EAAAvP,KAAA,EAEQyI,EAAK1I,OAAOwD,eAAeoK,gBAAgBxK,GAFnD,OAER5C,EAFQgP,EAAA5N,KAGd8G,EAAKV,aAAaxH,EAASuI,GAHb,wBAAAyG,EAAA1M,SAAAyM,EAAAzP,SAAF,gBAAA2P,EAAAC,GAAA,OAAAJ,EAAA1S,MAAAkD,KAAAkD,YAAA,GAWhB2M,YAAW,eAAAC,EAAA7J,EAAA3F,mBAAAC,KAAE,SAAAwP,EAAAC,EAAsC/G,GAAtC,IAAApI,EAAAlB,EAAA8O,EAAA/N,EAAAuP,EAAA,OAAA3P,mBAAAa,KAAA,SAAA+O,GAAA,cAAAA,EAAA7O,KAAA6O,EAAA/P,MAAA,cAASU,EAATmP,EAASnP,QAASlB,EAAlBqQ,EAAkBrQ,QAAS8O,EAA3BuB,EAA2BvB,QACpC7F,EAAKP,eADI6H,EAAA/P,KAAA,EAEayI,EAAK1I,OAAOwD,eAAeoK,iBAAkBjN,UAASlB,YAFnE,cAEHe,EAFGwP,EAAApO,KAAAoO,EAAA/P,KAAA,EAGmByI,EAAK1I,OAAOoH,WAAWuI,YAAYnP,EAASyP,EAAA,OAAO7N,KAAKmM,IAH3E,OAGHwB,EAHGC,EAAApO,KAITmH,GAAOgH,kBAJE,wBAAAC,EAAAlN,SAAA+M,EAAA/P,SAAF,gBAAAoQ,EAAAC,GAAA,OAAAP,EAAAhT,MAAAkD,KAAAkD,YAAA,KAOfoN,IACI3H,EACAE,EACAF,EACA,SAACvB,GACOA,GAAK1F,IAAI0H,MAAMhC,KAG3ByB,EAAMtB,GAAG,SAAU,SAACgJ,GAChB,IAAMC,EAAaD,EAAOC,WAAWxR,KAAKuR,GAC1C3H,EAAKrB,GAAG,SAAUiJ,KAMtBxQ,KAAKkE,MAAMqD,GAAG,SAAU,SAACrD,GACrB0E,EAAK9D,KAAK,UAAYZ,4XC5RlC,SAAA1D,IAAA,IAAAiQ,EAIaC,EAJb,OAAApQ,mBAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAjB,MAAA,OAIauQ,EAJb,SAI4BC,GACpB,IAAMC,EAAcD,EAAW3S,KAC/ByD,QAAQC,IAAI,+BAAgCkP,GAE5CH,EAAWvM,MAAMM,IAAI,UAErB,IAAMqM,EAAa,IAAIC,EAAAxL,EAAWqL,GAClCF,EAAWM,mBAAmBF,GAE9BJ,EAAWjL,QAAQC,WAAY,EAC/BuL,IAAYH,EAAY,WACpBJ,EAAWjL,QAAQC,WAAY,EAC/BhE,QAAQC,IAAI,yBAA0BkP,GACtCH,EAAWvM,MAAMM,IAAI,eAhBvBiM,EAAa,IAAI1L,EACvBM,EAAAC,EAAUC,QAAQ0L,UAAUC,YAAYR,GAF5C,wBAAAtP,EAAA4B,SAAAxC,EAAAR,gCAdA1C,EAAQ,KAQRmE,QAAQC,IAAI,kCACZD,QAAQC,IAAI,eAAgB2D,EAAAC,EAAUC,QAAQH,uCAG9C+L,GA4CAC,OAAOC,aAAaC,YACpBF,OAAOC,aAAavS,QAChByS,MAAO,iBACPC,UAAW,kBACXC,QAAS,WACLpM,EAAAC,EAAUoM,KAAK5S,QAAQmC,IAAM,gBAIrCoE,EAAAC,EAAUoM,KAAK5S,QAAQmC,IAAM","file":"background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([315,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"manifest.json\";","export default {\n    chains: [\n        {\n            chainId: 'testnet.aergo.io',\n            nodeUrl: 'http://testnet.aergo.io:7845'\n        },\n        {\n            chainId: 'main.aergo.io',\n            nodeUrl: 'https://mainnet-api.aergo.io'\n        },\n        {\n            chainId: 'sqltestnet.aergo.io',\n            nodeUrl: 'http://sqltestnet.aergo.io:7845'\n        },\n        {\n            chainId: 'dev.chain',\n            nodeUrl: 'http://127.0.0.1:7845'\n        }\n    ]\n};","import { Address } from '@herajs/client';\nimport { Transaction } from '@herajs/wallet';\n\n/**\n * This is a data source for transactionManager.getAccountTransactions.\n * It uses the Aergoscan API which is experimental and subject to change.\n * It is not recommended to use this data source.\n */\nexport class AergoscanTransactionScanner {\n    fetchAccountTransactionsAfter(wallet) {\n        return (next) => async ({ account, blockno, limit }) => {\n            const chainId = account.data.spec.chainId\n            if (chainId !== 'testnet.aergo.io' && chainId !== 'main.aergo.io') {\n                return next({ account, blockno, limit });\n            }\n            const address = new Address(account.data.spec.address);\n            console.log(`[track account] Fetching txs for ${address} on ${chainId} since ${blockno}...`);\n            const q = encodeURIComponent(`(from:${address} OR to:${address}) AND blockno:>${blockno}`);\n            const baseUrl = 'https://api.aergoscan.io/testnet';\n            const size = 1000;\n            const offset = 0;\n            const url = `${baseUrl}/transactions?q=${q}&sort=blockno:desc&size=${size}&from=${offset}`;\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(`[track account] Got ${data.hits.length} (of ${data.total}) txs for ${address} since ${blockno}.`);\n            return data.hits.map(tx => new Transaction(tx.hash, {\n                chainId,\n                from: tx.meta.from,\n                to: tx.meta.to,\n                hash: tx.hash,\n                ts: tx.meta.ts,\n                blockhash: '', // TODO: remove or add?\n                blockno: tx.meta.blockno,\n                amount: tx.meta.amount,\n                type: tx.meta.type,\n                status: Transaction.Status.Confirmed\n            }));\n        };\n    }\n\n    fetchAccountTransactions(wallet) {\n        return () => async (account) => {\n            const accountSpec = wallet.accountManager.getCompleteAccountSpec(account.data.spec);\n            const { bestHeight } = await wallet.getClient(accountSpec.chainId).blockchain();\n            return this.fetchAccountTransactionsBefore(wallet)(async () => [])({ account, blockno: bestHeight });\n        };\n    }\n}","import {EventEmitter} from 'events';\n\nconst IDLE_TIMEOUT = 60 * 1000;\n\nclass State extends EventEmitter {\n    constructor() {\n        super();\n        this._idleTimeout = null;\n        this.set('initial');\n    }\n\n    /**\n     * App states: initial -> active -> inactive -> idle\n     * Opening UI switches state to active. Closing UI switches state to inactive.\n     * After being inactive for a certain amount of time, switch to idle.\n     * @param {string} nextState \n     */\n    set(nextState) {\n        if (nextState != 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n        }\n        if (this.state != nextState && nextState == 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n            this._idleTimeout = setTimeout(() => {\n                this.set('idle');\n            }, IDLE_TIMEOUT);\n        }\n        if (this.state != nextState) {\n            console.log(`[state] ${this.state} -> ${nextState}`);\n        }\n        this.state = nextState;\n        this.emit('change', nextState);\n        this.emit(nextState);\n    }\n}\n\nexport default State;","import extension from 'extensionizer';\nimport { EventEmitter } from 'events';\nimport pump from 'pump';\nimport Dnode from 'dnode/browser.js';\n\nimport { Wallet } from '@herajs/wallet';\nimport config from './config';\nimport store from './store';\nimport { AergoscanTransactionScanner } from './tx-scanner';\n\nimport {\n    identifyFromPrivateKey,\n    encryptPrivateKey,\n    encodePrivateKey\n} from '@herajs/crypto';\nimport State from './state';\nimport 'whatwg-fetch';\n\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes) {\n    return bs58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string) {\n    return bs58.decode(bs58string);\n}\n\nconst AUTO_LOCK_TIMEOUT = 60*1000;\n\nclass BackgroundController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.id = extension.runtime.id;\n\n        this.uiState = {\n            popupOpen: false\n        }\n        this.state = new State();\n        this._lockTimeout = null;\n\n        this.wallet = new Wallet({\n            appName: 'aergo-browser-wallet',\n            instanceId: this.id\n        });\n        this.wallet.use(AergoscanTransactionScanner);\n        this.wallet.useStorage(store).then(async () => {\n            this.firstLoad();\n            // Load custom defined chains\n            try {\n                const customChains = await this.wallet.datastore.getIndex('settings').get('customChains')\n                for (let chainId of Object.keys(customChains.data)) {\n                    this.wallet.useChain({ chainId, nodeUrl: customChains.data[chainId].nodeUrl});\n                }\n            } catch (e) {\n                // not found\n            }\n        });\n        for (let chain of config.chains) {\n            this.wallet.useChain(chain);\n        }\n\n        this.wallet.keyManager.on('lock', () => {\n            this.emit('update', { unlocked: false });\n            console.log('[lock] locked');\n        });\n        this.wallet.keyManager.on('unlock', () => {\n            this.emit('update', { unlocked: true });\n            console.log('[lock] unlocked');\n        });\n\n        this.state.on('idle', () => {\n            console.log('[state] idle, pausing trackers');\n            this.wallet.accountManager.pause();\n            this.wallet.transactionManager.pause();\n        });\n        this.state.on('active', () => {\n            console.log('[state] active, resuming trackers');\n            this.wallet.accountManager.resume();\n            this.wallet.transactionManager.resume();\n        });\n\n        this.lock();\n    }\n\n    async firstLoad() {\n        const accounts = await this.wallet.accountManager.getAccounts();\n        for (let account of accounts) {\n            this.trackAccount(account);\n        }\n    }\n\n    lock () {\n        this.wallet.lock();\n    }\n    \n    async unlock (passphrase) {\n        await this.wallet.unlock(passphrase);\n        this.keepUnlocked();\n    }\n\n    async setupAndUnlock (passphrase) {\n        await this.wallet.setupAndUnlock(passphrase);\n        this.keepUnlocked();\n    }\n\n    keepUnlocked() {\n        if (this._lockTimeout) {\n            clearTimeout(this._lockTimeout);\n        }\n        this._lockTimeout = setTimeout(() => {\n            console.log('[lock] auto-locking...');\n            this.lock();\n        }, AUTO_LOCK_TIMEOUT);\n    }\n\n    isUiOpen() {\n        return this.uiState.popupOpen;\n    }\n\n    trackAccount(account, onceCb) {\n        const accountTracker = this.wallet.accountManager.trackAccount(account);\n        this.wallet.transactionManager.trackAccount(account);\n        accountTracker.then(t => {\n            t.removeAllListeners('update');\n            t.on('update', account => {\n                console.log('got new state', account);\n                this.emit('update', { accounts: [account] });\n                if (onceCb) {\n                    onceCb(account);\n                    onceCb = false;\n                }\n            });\n        });\n    }\n\n    setupCommunication (outStream) {\n        // Setup async rpc stream to UI\n        const dnode = Dnode({\n            unlock: async ({ password }, send) => {\n                try {\n                    await this.unlock(password);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                    return;\n                }\n                send({});\n            },\n            lock: async (send) => {\n                this.lock();\n                send({});\n            },\n            setup: async ({ password }, send) => {\n                await this.setupAndUnlock(password);\n                send({});\n            },\n            isUnlocked: async (send) => {\n                send(this.wallet.unlocked);\n            },\n            reset: async (send) => {\n                await store.open();\n                await store.getIndex('accounts').clear();\n                await store.getIndex('transactions').clear();\n                await store.getIndex('settings').clear();\n                await store.getIndex('keys').clear();\n                send();\n            },\n            addNetwork: async ({ chainId, nodeUrl }, send) => {\n                console.log('Adding chain', { chainId, nodeUrl });\n                this.wallet.useChain({ chainId, nodeUrl });\n                let chains = {};\n                try {\n                    chains = (await this.wallet.datastore.getIndex('settings').get('customChains')).data;\n                } catch(e) {\n                    // not found\n                }\n                chains[chainId] = { chainId, nodeUrl };\n                await this.wallet.datastore.getIndex('settings').put({\n                    key: 'customChains',\n                    data: chains\n                });\n                send({});\n            },\n            getBlockchainStatus: async (send) => {\n                const status = await this.wallet.getClient().blockchain();\n                send({\n                    blockHeight: status.bestHeight,\n                    chainId: this.wallet.defaultChainId\n                });\n            },\n            getAccounts: async (send) => {\n                this.keepUnlocked();\n                const accounts = await this.wallet.accountManager.getAccounts();\n                for (let account of accounts) {\n                    this.trackAccount(account);\n                }\n                send(accounts);\n            },\n            createAccount: async ({ chainId }, send) => {\n                this.keepUnlocked();\n                \n                const account = await this.wallet.accountManager.createAccount(chainId);\n                this.trackAccount(account);\n                send(account.data.spec);\n            },\n            importAccount: async ({ privateKey, chainId }, send) => {\n                this.keepUnlocked();\n                const identity = identifyFromPrivateKey(privateKey);\n                const address = identity.address;\n                try {\n                    const account = await this.wallet.accountManager.addAccount({ address, chainId });\n                    console.log('importAccount', account, privateKey);\n                    await this.wallet.keyManager.importKey({\n                        account: account,\n                        privateKey: privateKey\n                    });\n                    this.trackAccount(account);\n                    send(account.data.spec);\n                } catch(e) {\n                    console.error(e);\n                    send({ error: 'Could not import account. '+e });\n                }\n            },\n            exportAccount: async ({ address, chainId, password }, send) => {\n                this.keepUnlocked();\n                const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n                const key = await this.wallet.keyManager.getKey(account);\n                console.log(account, key);\n                const privateKey = key.data.privateKey;\n                /*\n                let privateKey;\n                try {\n                    privateKey = await decryptPrivateKey(account.data.privateKey, this.masterPassword);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: 'Could not decrypt private key. '+e });\n                    return;\n                }*/\n                const privkeyEncrypted = await encryptPrivateKey(privateKey, password);\n                send({privateKey: encodePrivateKey(privkeyEncrypted)});\n            },\n            sendTransaction: async (tx, chainId, send) => {\n                this.keepUnlocked();\n                try {\n                    const txTracker = await this.wallet.sendTransaction({\n                        address: tx.from,\n                        chainId: chainId\n                    }, tx);\n                    console.log(txTracker, txTracker.transaction.txBody);\n                    send({ tx: txTracker.transaction.txBody });\n                } catch(e) {\n                    console.error(e);\n                    send({ error: e.message || ''+e });\n                }\n            },\n            getAccountTx: async (accountSpec, send) => {\n                console.log('getAccountTx', accountSpec);\n                if (!accountSpec.address) return send({});\n                const txs = await this.wallet.transactionManager.getAccountTransactions(accountSpec);\n                txs.sort((a, b) => (a.data.ts < b.data.ts ? 1 : (a.data.ts == b.data.ts ? 0 : -1)));\n                send(txs);\n            },\n            syncAccountState: async (accountSpec, send) => {\n                if (!accountSpec.address) return send({});\n                const account = await this.wallet.accountManager.getOrAddAccount(accountSpec);\n                this.trackAccount(account, send);\n                /*const tracker = await this.wallet.accountManager.trackAccount(accountSpec);\n                tracker.once('update', account => {\n                    console.log('got new state', account);\n                    tracker.pause();\n                    send(account);\n                });*/\n            },\n            signMessage: async ({ address, chainId, message }, send) => {\n                this.keepUnlocked();\n                const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n                const signedMessage = await this.wallet.keyManager.signMessage(account, Buffer.from(message));\n                send({ signedMessage });\n            }\n        })\n        pump(\n            outStream,\n            dnode,\n            outStream,\n            (err) => {\n                if (err) log.error(err);\n            }\n        );\n        dnode.on('remote', (remote) => {\n            const sendUpdate = remote.sendUpdate.bind(remote);\n            this.on('update', sendUpdate)\n        });\n\n        /*setInterval(() => {\n            this.emit('update', 'something');\n        }, 1000)*/\n        this.state.on('change', (state) => {\n            this.emit('update', { state });\n        });\n    }\n}\n\nexport default BackgroundController;","import \"regenerator-runtime/runtime\";\n\nrequire('./manifest.json');\n\nimport extension from 'extensionizer';\nimport endOfStream from 'end-of-stream';\nimport PortStream from 'extension-port-stream';\n\nimport BackgroundController from './controllers/background';\n\nconsole.log('AERGO Wallet Background Script');\nconsole.log('Extension ID', extension.runtime.id);\n\n\nsetupController();\n\nasync function setupController() {\n    const controller = new BackgroundController();\n    extension.runtime.onConnect.addListener(connectRemote);\n    \n    function connectRemote (remotePort) {\n        const processName = remotePort.name;\n        console.log('Establishing connection with', processName);\n\n        controller.state.set('active');\n    \n        const portStream = new PortStream(remotePort);\n        controller.setupCommunication(portStream);\n    \n        controller.uiState.popupOpen = true;\n        endOfStream(portStream, () => {\n            controller.uiState.popupOpen = false;\n            console.log('Closed connection with', processName);\n            controller.state.set('inactive');\n        })\n\n        /*\n\n        const notifId = '';\n        extension.notifications.create(\n            notifId,\n            {\n                type: 'basic',\n                title: 'Aergo Wallet',\n                iconUrl: extension.extension.getURL('0da81dee4755822e45e812c8ce30d733.png'),\n                message: `Hello from the Wallet! Established connection with ${processName}. Yes.`,\n            }\n        );\n        extension.notifications.onClicked.addListener((url) => {\n            if (!txId.startsWith('http')) return;\n            console.log('clicked on', e);\n            extension.tabs.create({ url });\n        });\n\n        */\n    }\n}\n\nchrome.contextMenus.removeAll();\nchrome.contextMenus.create({\n    title: \"Open full page\",\n    contexts: [\"browser_action\"],\n    onclick: function() {\n        extension.tabs.create({url : \"tab.html\"});\n    }\n});\n\nextension.tabs.create({url : \"tab.html\"});\n\n"],"sourceRoot":""}