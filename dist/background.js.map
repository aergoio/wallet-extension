{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/controllers/store.js","webpack:///./src/controllers/background.js","webpack:///./src/background.js","webpack:///./src/manifest.json"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Index","db","keyPath","_classCallCheck","this","transaction","objectStore","getAll","_tx$objectStore$put","tx","put","_defineProperty","complete","delete","store_Store","Store","idb","upgradeDB","oldVersion","createObjectStore","transactions","accounts","background","BackgroundController","_this","background_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","uiState","popupOpen","provider","herajs","url","chain_provider","nodeUrl","aergo","herajs_default","a","store","_stateTimeout","setState","events","nextState","_this2","clearTimeout","state","setTimeout","console","log","concat","outStream","_this3","dnode","browser_default","getBlockchainStatus","_getBlockchainStatus","background_asyncToGenerator","regeneratorRuntime","mark","_callee","send","status","wrap","_context","prev","next","blockchain","sent","blockHeight","bestHeight","stop","_x","arguments","getAccounts","_getAccounts","_callee2","_context2","open","_x2","createAccount","_createAccount","_callee3","_ref","chain","identity","createdAddress","_context3","password","herajs_crypto","address","balance","publicKey","encodeCompressed","privateKey","toArray","_x3","_x4","importAccount","_importAccount","_callee4","_ref2","_context4","_x5","_x6","sendTransaction","_sendTransaction","_callee5","account","amount","_context5","from","toUnit","getNonce","t0","nonce","toString","keyPair","sign","hash","sendSignedTransaction","t1","error","_x7","_x8","syncAccountTx","_syncAccountTx","_callee6","response","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","txs","_context6","apiUrl","fetch","json","undefined","hits","iterator","done","meta","return","finish","sort","b","blockno","_x9","_x10","syncAccountState","_syncAccountState","_callee7","_context7","getState","_x11","_x12","pump_default","err","on","remote","sendUpdate","controller","connectRemote","remotePort","processName","portStream","extension_port_stream_default","setupCommunication","end_of_stream_default","extensionizer_default","runtime","onConnect","addListener","setupController","chrome","contextMenus","removeAll","title","contexts","onclick","tabs"],"mappings":"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","file":"background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([188,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { openDb } from 'idb';\n\nconst STORAGE_NAME = 'aergowallet';\nconst STORAGE_VERSION = 1;\n\nclass Index {\n    constructor(db, name, keyPath) {\n        this.name = name;\n        this.db = db;\n        this.keyPath = keyPath;\n    }\n    get(key) {\n        return this.db.transaction(this.name).objectStore(this.name).get(key);\n    }\n    getAll() {\n        return this.db.transaction(this.name).objectStore(this.name).getAll();\n    }\n    put(key, data) {\n        const tx = this.db.transaction(this.name, 'readwrite');\n        tx.objectStore(this.name).put({\n            [this.keyPath]: key,\n            data\n        });\n        return tx.complete;\n    }\n    delete(key) {\n        return this.db.transaction(this.name).objectStore(this.name).delete(key);\n    }\n}\n\nexport default class Store {\n    constructor() {\n    }\n    async open() {\n        if (typeof this.db !== 'undefined') return;\n\n        this.db = await openDb(STORAGE_NAME, STORAGE_VERSION, upgradeDB => {\n            switch (upgradeDB.oldVersion) {\n                case 0:\n                    upgradeDB.createObjectStore('tx', {keyPath: 'hash'});\n                    upgradeDB.createObjectStore('accounts', {keyPath: 'id'});\n            }\n        });\n        this.transactions = new Index(this.db, 'tx', 'hash');\n        this.accounts = new Index(this.db, 'accounts', 'id');\n    }\n}","import {EventEmitter} from 'events';\nimport pump from 'pump';\nimport Dnode from 'dnode/browser.js';\n\nimport AergoClient, { GrpcWebProvider, Amount } from '@herajs/client';\nimport { createIdentity, identifyFromPrivateKey, signTransaction, hashTransaction } from '@herajs/crypto';\nimport Store from './store';\nimport 'whatwg-fetch';\nimport { DEFAULT_CHAIN, chainProvider } from './chain-provider';\n\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes) {\n    return bs58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string) {\n    return bs58.decode(bs58string);\n}\n\n\n\nclass BackgroundController extends EventEmitter {\n    constructor() {\n        super();\n        this.uiState = {\n            popupOpen: false\n        }\n        const provider = new GrpcWebProvider({url: chainProvider(DEFAULT_CHAIN).nodeUrl});\n        this.aergo = new AergoClient({}, provider);\n        this.store = new Store();\n        \n        this._stateTimeout = null;\n        this.setState('initial');\n    }\n\n    /**\n     * App states: initial -> active -> inactive -> idle\n     * Opening UI switches state to active. Closing UI switches state to inactive.\n     * After being inactive for a certain amount of time, switch to idle.\n     * @param {string} nextState \n     */\n    setState(nextState) {\n        if (nextState != 'inactive') {\n            if (this._stateTimeout) {\n                clearTimeout(this._stateTimeout);\n            }\n        }\n        if (this.state != nextState && nextState == 'inactive') {\n            if (this._stateTimeout) {\n                clearTimeout(this._stateTimeout);\n            }\n            this._stateTimeout = setTimeout(() => {\n                this.setState('idle');\n            }, 60000);\n        }\n        if (this.state != nextState) {\n            console.log(`[state] ${this.state} -> ${nextState}`);\n        }\n        this.state = nextState;\n    }\n\n    isUiOpen() {\n        return this.uiState.popupOpen;\n    }\n\n    setupCommunication (outStream) {\n        // Setup simple async rpc stream to popup\n        const dnode = Dnode({\n            getBlockchainStatus: async (send) => {\n                const status = await this.aergo.blockchain();\n                send({\n                    blockHeight: status.bestHeight\n                });\n            },\n            getAccounts: async (send) => {\n                await this.store.open();\n                const accounts = await this.store.accounts.getAll();\n                /*\n                const addresses = await this.aergo.accounts.get();\n                const accounts = await Promise.all(addresses.map(async (address) => {\n                    const state = await this.aergo.getState(address);\n                    return { address: address.toString(), balance: state.balance.toString() };\n                }));\n                */\n                send(accounts);\n            },\n            createAccount: async ({ name, password }, send) => {\n                const chain = DEFAULT_CHAIN;\n                const identity = await createIdentity();\n                const createdAddress = identity.address;\n                await this.store.open();\n                await this.store.accounts.put(createdAddress, {\n                    balance: 0,\n                    publicKey: identity.publicKey.encodeCompressed(),\n                    privateKey: identity.privateKey.toArray(),\n                    chain: chain,\n                    name: name\n                });\n                send({address: createdAddress});\n            },\n            importAccount: async ({ privateKey }, send) => {\n                const chain = DEFAULT_CHAIN;\n                const identity = identifyFromPrivateKey(privateKey);\n                const createdAddress = identity.address;\n                await this.store.open();\n                await this.store.accounts.put(createdAddress, {\n                    balance: 0,\n                    publicKey: identity.publicKey.encodeCompressed(),\n                    privateKey: identity.privateKey.toArray(),\n                    chain: chain,\n                    name: name\n                });\n                send({address: createdAddress});\n            },\n            sendTransaction: async (tx, send) => {\n                await this.store.open();\n                const account = await this.store.accounts.get(tx.from);\n                const identity = identifyFromPrivateKey(account.data.privateKey);\n\n                const amount = (new Amount(tx.amount)).toUnit('aer');\n\n                tx.nonce = 1 + await this.aergo.getNonce(tx.from); // TODO: check if there's a local, non-confirmed tx\n                tx.amount = amount.value.toString();\n                tx.sign = await signTransaction(tx, identity.keyPair);\n                \n                tx.hash = await hashTransaction(tx, 'bytes');\n                // TODO: signTransaction only understands unitless number, string, or BigInt for amount\n                // but sendSignedTransaction assumes aergo if no unit given\n                tx.amount = amount.toString();\n\n                \n                try {\n                    tx.hash = await this.aergo.sendSignedTransaction(tx);\n                    send({ tx });\n                } catch(e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                }\n            },\n            syncAccountTx: async (address, send) => {\n                await this.store.open();\n                const account = await this.store.accounts.get(address);\n                const url = chainProvider(account.data.chain).apiUrl(`/transactions?q=from:${address}%20OR%20to:${address}&sort=blockno:desc`);\n                const response = await fetch(url);\n                const data = await response.json();\n                for (let tx of data.hits) {\n                    await this.store.transactions.put(tx.hash, tx.meta);\n                    // todo check for duplicates\n                }\n                const txs = await this.store.transactions.getAll();\n                txs.sort((a, b) => -(a.data.blockno - b.data.blockno));\n                console.log(txs);\n                send(txs);\n            },\n            syncAccountState: async (address, send) => {\n                await this.store.open();\n                const account = await this.store.accounts.get(address);\n                const state = await this.aergo.getState(address);\n                console.log(state);\n                account.data.balance = state.balance.toString();\n                this.store.accounts.put(address, account.data);\n                send(account);\n            }\n        })\n        pump(\n            outStream,\n            dnode,\n            outStream,\n            (err) => {\n                if (err) log.error(err);\n            }\n        );\n        dnode.on('remote', (remote) => {\n            const sendUpdate = remote.sendUpdate.bind(remote);\n            this.on('update', sendUpdate)\n        });\n\n        /*setInterval(() => {\n            this.emit('update', 'something');\n        }, 1000)*/\n    }\n}\n\nexport default BackgroundController;","import \"regenerator-runtime/runtime\";\n\nconsole.log('AERGO Wallet Background Script');\n\nrequire('./manifest.json');\n\nimport extension from 'extensionizer';\nimport endOfStream from 'end-of-stream';\nimport PortStream from 'extension-port-stream';\n\nimport BackgroundController from './controllers/background';\n\nsetupController();\n\nasync function setupController() {\n    const controller = new BackgroundController();\n    extension.runtime.onConnect.addListener(connectRemote);\n\n    function connectRemote (remotePort) {\n        const processName = remotePort.name;\n        console.log('Establishing connection with', processName);\n\n        controller.setState('active');\n    \n        const portStream = new PortStream(remotePort);\n        controller.setupCommunication(portStream);\n    \n        controller.uiState.popupOpen = true;\n        endOfStream(portStream, () => {\n            controller.uiState.popupOpen = false;\n            console.log('Closed connection with', processName);\n            controller.setState('inactive');\n        })\n\n        /*\n\n        const notifId = '';\n        extension.notifications.create(\n            notifId,\n            {\n                type: 'basic',\n                title: 'Aergo Wallet',\n                iconUrl: extension.extension.getURL('0da81dee4755822e45e812c8ce30d733.png'),\n                message: `Hello from the Wallet! Established connection with ${processName}. Yes.`,\n            }\n        );\n        extension.notifications.onClicked.addListener((url) => {\n            if (!txId.startsWith('http')) return;\n            console.log('clicked on', e);\n            extension.tabs.create({ url });\n        });\n\n        */\n    }\n}\n\nchrome.contextMenus.removeAll();\nchrome.contextMenus.create({\n    title: \"Open full page\",\n    contexts: [\"browser_action\"],\n    onclick: function() {\n        extension.tabs.create({url : \"tab.html\"});\n    }\n});\n\nextension.tabs.create({url : \"tab.html\"});\n\n","module.exports = __webpack_public_path__ + \"manifest.json\";"],"sourceRoot":""}