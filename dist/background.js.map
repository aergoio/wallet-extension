{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/controllers/state.js","webpack:///./src/controllers/transactions.js","webpack:///./src/controllers/accounts.js","webpack:///./src/controllers/background.js","webpack:///./src/background.js","webpack:///./src/manifest.json"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","controllers_state","State","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_idleTimeout","set","events","nextState","_this2","clearTimeout","state","setTimeout","console","log","concat","emit","transactions","TransactionManager","store","transactions_classCallCheck","transactions_possibleConstructorReturn","transactions_getPrototypeOf","intervals","lastBlockPromise","account","blockno","size","offset","id","q","encodeURIComponent","url","chain_provider","chain","apiUrl","fetch","response","json","hits","total","Promise","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee2","resolve","bestBlock","wrap","_context2","prev","next","sent","stop","_x4","arguments","stopTrackingAccount","initialSyncDone","sync","_ref2","_callee4","lastBlockno","txs","_context4","open","lastSync","e","_getTransactionsSince","all","map","tx","put","hash","meta","_getBestBlock","no","time","ts","nodeClient","getState","balance","toString","accounts","setInterval","clearInterval","AccountManager","transactionManager","accounts_classCallCheck","accounts_possibleConstructorReturn","accounts_getPrototypeOf","accountsById","trackedAccounts","initialLoad","on","startTracking","stopTracking","getAll","_iterator","iterator","_iteratorNormalCompletion","_step","done","loadFromStore","_iterator2","_iteratorNormalCompletion2","_step2","trackAccount","_toConsumableArray","_iterator3","_iteratorNormalCompletion3","_step3","encodeTxHash","bytes","bs58_default","a","encode","buffer","from","background","BackgroundController","background_classCallCheck","background_possibleConstructorReturn","background_getPrototypeOf","extensionizer_default","runtime","uiState","popupOpen","aergo","_lockTimeout","lock","accountManager","password","settings","encryptedId","herajs_crypto","Error","masterPassword","unlocked","keepUnlocked","unlock","outStream","_this3","dnode","browser_default","_unlock2","background_asyncToGenerator","_callee3","send","_context3","t0","error","abrupt","_x3","_lock","_x5","setup","_setup","_callee5","_context5","setupAndUnlock","_x6","_x7","isUnlocked","_isUnlocked","_callee6","_context6","_x8","reset","_reset","_callee7","_context7","clear","_x9","getBlockchainStatus","_getBlockchainStatus","_callee8","status","_context8","blockchain","blockHeight","bestHeight","chainId","_x10","getAccounts","_getAccounts","_callee9","_context9","_x11","createAccount","_createAccount","_callee10","_ref3","identity","createdAddress","_context10","address","t1","t2","publicKey","encodeCompressed","privateKey","toArray","t3","t4","t5","t6","_x12","_x13","importAccount","_importAccount","_callee11","_ref4","_context11","_x14","_x15","exportAccount","_exportAccount","_callee12","_ref5","privkeyEncrypted","_context12","_x16","_x17","sendTransaction","_sendTransaction","_callee13","amount","encodedHash","_context13","herajs","toUnit","getNonce","nonce","keyPair","sign","sendSignedTransaction","Date","toISOString","to","type","payload","payload0","_x18","_x19","getAccountTx","_getAccountTx","_callee14","range","txsFrom","txsTo","_context14","IDBKeyRange","bound","getAllIndex","filter","has","add","Set","sort","b","_x20","_x21","syncAccountState","_syncAccountState","_callee15","_context15","_x22","_x23","pump_default","err","remote","sendUpdate","_callee","controller","connectRemote","_context","remotePort","processName","portStream","extension_port_stream_default","setupCommunication","end_of_stream_default","onConnect","addListener","setupController","chrome","contextMenus","removeAll","title","contexts","onclick","tabs"],"mappings":"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","file":"background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([208,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {EventEmitter} from 'events';\n\nconst IDLE_TIMEOUT = 60 * 1000;\n\nclass State extends EventEmitter {\n    constructor() {\n        super();\n        this._idleTimeout = null;\n        this.set('initial');\n    }\n\n    /**\n     * App states: initial -> active -> inactive -> idle\n     * Opening UI switches state to active. Closing UI switches state to inactive.\n     * After being inactive for a certain amount of time, switch to idle.\n     * @param {string} nextState \n     */\n    set(nextState) {\n        if (nextState != 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n        }\n        if (this.state != nextState && nextState == 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n            this._idleTimeout = setTimeout(() => {\n                this.set('idle');\n            }, IDLE_TIMEOUT);\n        }\n        if (this.state != nextState) {\n            console.log(`[state] ${this.state} -> ${nextState}`);\n        }\n        this.state = nextState;\n        this.emit('change', nextState);\n        this.emit(nextState);\n    }\n}\n\nexport default State;","import 'whatwg-fetch';\nimport { EventEmitter } from 'events';\nimport { DEFAULT_CHAIN, chainProvider } from './chain-provider';\n\nconst SYNC_INTERVAL = 15 * 1000;\n\nclass TransactionManager extends EventEmitter {\n    constructor(store) {\n        super();\n        this.intervals = {};\n        this.store = store;\n        this.lastBlockPromise = {};\n    }\n\n    async _getTransactionsSince(account, blockno, size=100, offset=0) {\n        console.log(`Getting txs for ${account.id} since ${blockno}...`);\n        const q = encodeURIComponent(`(from:${account.id} OR to:${account.id}) AND blockno:>${blockno}`);\n        const url = chainProvider(account.data.chain).apiUrl(`/transactions?q=${q}&sort=blockno:desc&size=${size}&from=${offset}`);\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(`Got ${data.hits.length} (of ${data.total}) txs for ${account.id} since ${blockno}.`);\n        return data.hits;\n    }\n\n    async _getBestBlock(account) {\n        if (this.lastBlockPromise[account.data.chain]) return await this.lastBlockPromise[account.data.chain];\n        this.lastBlockPromise[account.data.chain] = new Promise(async (resolve) => {\n            const url = chainProvider(account.data.chain).apiUrl(`/bestBlock`);\n            const response = await fetch(url);\n            const bestBlock = await response.json();\n            resolve(bestBlock);\n        });\n        const result = await this.lastBlockPromise[account.data.chain];\n        this.lastBlockPromise[account.data.chain] = null;\n        return result;\n    }\n\n    /**\n     * Start tracking an account for transactions using remote API\n     * @param {*} account \n     */\n    trackAccount(account) {\n        if (typeof this.intervals[account.id] !== 'undefined' && this.intervals[account.id] !== null) {\n            this.stopTrackingAccount(account);\n        }\n        let initialSyncDone = false;\n        const sync = async () => {\n            await this.store.open();\n            let lastBlockno = 0;\n            try {\n                lastBlockno = account.data.lastSync.blockno;\n            } catch(e) {}\n            const txs = await this._getTransactionsSince(account, lastBlockno);\n            await Promise.all(txs.map(tx => this.store.transactions.put(tx.hash, tx.meta)));\n            const bestBlock = await this._getBestBlock(account);\n            account.data.lastSync = {\n                blockno: bestBlock.meta.no,\n                time: bestBlock.meta.ts\n            }\n            if (txs.length > 0 || !initialSyncDone) {\n                // new tx, update account state\n                const state = await chainProvider(account.data.chain).nodeClient().getState(account.id);\n                account.data.balance = state.balance.toString();\n                initialSyncDone = true;\n            }\n            console.log(`[${account.id}] Saved ${txs.length} new txs, balance is ${account.data.balance}.`);\n            await this.store.accounts.put(account.id, account.data);\n        };\n        this.intervals[account.id] = setInterval(sync, SYNC_INTERVAL);\n        sync();\n    }\n    /**\n     * Stop tracking an address for transactions\n     * @param {*} address \n     */\n    stopTrackingAccount(account) {\n        clearInterval(this.intervals[account.id]);\n        this.intervals[account.id] = null;\n    }\n}\n\nexport default TransactionManager;","import 'whatwg-fetch';\nimport { EventEmitter } from 'events';\n\nclass AccountManager extends EventEmitter {\n    constructor(store, state, transactionManager) {\n        super();\n        this.intervals = {};\n        this.store = store;\n        this.state = state;\n        this.transactionManager = transactionManager;\n        this.accounts = [];\n        this.accountsById = {};\n        this.trackedAccounts = [];\n        this.initialLoad = false;\n\n        this.state.on('active', () => {\n            console.log('became active');\n            this.startTracking();\n        });\n\n        this.state.on('idle', () => {\n            console.log('became idle');\n            this.stopTracking();\n        });\n    }\n\n    async loadFromStore() {\n        await this.store.open();\n        this.accounts = await this.store.accounts.getAll();\n        for (let account of this.accounts) {\n            this.accountsById[account.id] = account;\n        }\n    }\n\n    async startTracking() {\n        await this.loadFromStore();\n        this.initialLoad = true;\n        for (let account of this.accounts) {\n            this.transactionManager.trackAccount(account);\n        }\n        this.trackedAccounts = [...this.accounts];\n        console.log(`Tracking ${this.trackedAccounts.length} accounts`);\n    }\n\n    async stopTracking() {\n        for (let account of this.trackedAccounts) {\n            this.transactionManager.stopTrackingAccount(account);\n        }\n    }\n}\n\nexport default AccountManager;","import extension from 'extensionizer';\nimport { EventEmitter } from 'events';\nimport pump from 'pump';\nimport Dnode from 'dnode/browser.js';\n\nimport { Amount } from '@herajs/client';\nimport {\n    createIdentity, identifyFromPrivateKey,\n    signTransaction, hashTransaction,\n    decryptPrivateKey, encryptPrivateKey,\n    encodePrivateKey\n} from '@herajs/crypto';\nimport Store from './store';\nimport State from './state';\nimport 'whatwg-fetch';\nimport { DEFAULT_CHAIN, chainProvider } from './chain-provider';\nimport TransactionManager from './transactions';\nimport AccountManager from './accounts';\n\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes) {\n    return bs58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string) {\n    return bs58.decode(bs58string);\n}\n\nconst AUTO_LOCK_TIMEOUT = 60*1000;\n\nclass BackgroundController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.id = extension.runtime.id;\n\n        this.uiState = {\n            popupOpen: false\n        }\n        this.aergo = chainProvider(DEFAULT_CHAIN).nodeClient();\n        this.store = new Store();\n\n        this.transactionManager = new TransactionManager(this.store);\n        \n        this.state = new State();\n        this._lockTimeout = null;\n        this.lock();\n\n        this.accountManager = new AccountManager(this.store, this.state, this.transactionManager);\n    }\n\n    async unlock (password) {\n        await this.store.open();\n        const encryptedId = await this.store.settings.get('encryptedId');\n        try {\n            const id = await decryptPrivateKey(encryptedId.data, password);\n        } catch (e) {\n            throw new Error('invalid passphrase');\n        }\n            \n        this.masterPassword = password;\n        this.unlocked = true;\n        this.emit('update', { unlocked: true });\n        this.keepUnlocked();\n        console.log('[lock] unlocked');\n    }\n\n    async setupAndUnlock (password) {\n        await this.store.open();\n        // save extension id encrypted using password for a quick check if password is correct later\n        const encryptedId = await encryptPrivateKey(Buffer.from(this.id), password);\n        await this.store.settings.put('encryptedId', encryptedId);\n        await this.store.settings.put('initialized', true);\n        await this.unlock(password);\n    }\n\n    keepUnlocked() {\n        if (this._lockTimeout) {\n            clearTimeout(this._lockTimeout);\n        }\n        this._lockTimeout = setTimeout(() => {\n            console.log('[lock] auto-locking...');\n            this.lock();\n        }, AUTO_LOCK_TIMEOUT);\n    }\n\n    lock () {\n        this.masterPassword = \"\";\n        this.unlocked = false;\n        this.emit('update', { unlocked: false });\n        console.log('[lock] locked');\n    }\n\n    isUiOpen() {\n        return this.uiState.popupOpen;\n    }\n\n    setupCommunication (outStream) {\n        // Setup async rpc stream to UI\n        const dnode = Dnode({\n            unlock: async ({ password }, send) => {\n                try {\n                    await this.unlock(password);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                    return;\n                }\n                send({});\n            },\n            lock: async (send) => {\n                this.lock();\n                send({});\n            },\n            setup: async ({ password }, send) => {\n                await this.setupAndUnlock(password);\n                send({});\n            },\n            isUnlocked: async (send) => {\n                send(this.unlocked);\n            },\n            reset: async (send) => {\n                await this.store.open();\n                await this.store.accounts.clear();\n                await this.store.transactions.clear();\n                await this.store.settings.clear();\n                send();\n            },\n            getBlockchainStatus: async (send) => {\n                const status = await this.aergo.blockchain();\n                send({\n                    blockHeight: status.bestHeight,\n                    chainId: DEFAULT_CHAIN\n                });\n            },\n            getAccounts: async (send) => {\n                this.keepUnlocked();\n                await this.store.open();\n                const accounts = await this.store.accounts.getAll();\n                send(accounts);\n            },\n            createAccount: async ({ name }, send) => {\n                this.keepUnlocked();\n                const chain = DEFAULT_CHAIN;\n                const identity = await createIdentity();\n                const createdAddress = identity.address;\n                await this.store.open();\n                await this.store.accounts.put(createdAddress, {\n                    balance: '0 aer',\n                    publicKey: identity.publicKey.encodeCompressed(),\n                    privateKey: await encryptPrivateKey(Buffer.from(identity.privateKey.toArray()), this.masterPassword),\n                    chain: chain,\n                    name: name\n                });\n                this.accountManager.startTracking();\n                send({address: createdAddress});\n            },\n            importAccount: async ({ privateKey }, send) => {\n                this.keepUnlocked();\n                const chain = DEFAULT_CHAIN;\n                const identity = identifyFromPrivateKey(privateKey);\n                const createdAddress = identity.address;\n                await this.store.open();\n                await this.store.accounts.put(createdAddress, {\n                    balance: '0 aer',\n                    publicKey: identity.publicKey.encodeCompressed(),\n                    privateKey: await encryptPrivateKey(Buffer.from(identity.privateKey.toArray()), this.masterPassword),\n                    chain: chain,\n                    name: name\n                });\n                this.accountManager.startTracking();\n                send({address: createdAddress});\n            },\n            exportAccount: async ({ id, password }, send) => {\n                this.keepUnlocked();\n                const account = await this.store.accounts.get(id);\n                let privateKey;\n                try {\n                    privateKey = await decryptPrivateKey(account.data.privateKey, this.masterPassword);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: 'Could not decrypt private key. '+e });\n                    return;\n                }\n                const privkeyEncrypted = await encryptPrivateKey(privateKey, password);\n                send({privateKey: encodePrivateKey(privkeyEncrypted)});\n            },\n            sendTransaction: async (tx, send) => {\n                this.keepUnlocked();\n                await this.store.open();\n                const account = await this.store.accounts.get(tx.from);\n                let privateKey;\n                try {\n                    privateKey = await decryptPrivateKey(account.data.privateKey, this.masterPassword);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: 'Could not decrypt private key. '+e });\n                    return;\n                }\n                const identity = identifyFromPrivateKey(privateKey);\n\n                const amount = (new Amount(tx.amount)).toUnit('aer');\n\n                tx.nonce = 1 + await this.aergo.getNonce(tx.from); // TODO: check if there's a local, non-confirmed tx\n                tx.amount = amount.value.toString();\n                tx.sign = await signTransaction(tx, identity.keyPair);\n                \n                tx.hash = await hashTransaction(tx, 'bytes');\n                // TODO: signTransaction only understands unitless number, string, or BigInt for amount\n                // but sendSignedTransaction assumes aergo if no unit given\n                tx.amount = amount.toString();\n\n                console.log(tx);\n\n                const encodedHash = encodeTxHash(tx.hash);\n                \n\n                try {\n                    await this.aergo.sendSignedTransaction(tx);\n                    tx.hash = encodedHash;\n                    const meta = {\n                        ts: (new Date()).toISOString(),\n                        blockno: null,\n                        from: tx.from,\n                        to: tx.to,\n                        amount: tx.amount,\n                        type: tx.type,\n                        status: 'pending'\n                    };\n                    if (tx.payload.length) {\n                        meta.payload0 = ''+tx.payload[0];\n                    }\n                    await this.store.transactions.put(encodedHash, meta);\n                    send({ tx });\n                } catch(e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                }\n            },\n            getAccountTx: async (address, send) => {\n                await this.store.open();\n                const range =  IDBKeyRange.bound(address, address);\n                // get all txs from or to this address\n                const txsFrom = await this.store.transactions.getAllIndex('from', range);\n                const txsTo = await this.store.transactions.getAllIndex('to', range);\n                // unique txs by hash\n                const txs = txsFrom.concat(txsTo).filter(function(o) {\n                    return this.has(o.hash) ? false : this.add(o.hash);\n                }, new Set());\n                txs.sort((a, b) => (a.data.ts < b.data.ts ? 1 : (a.data.ts == b.data.ts ? 0 : -1)));\n                send(txs);\n            },\n            syncAccountState: async (address, send) => {\n                await this.store.open();\n                const account = await this.store.accounts.get(address);\n                const state = await this.aergo.getState(address);\n                console.log('got new state', address, state);\n                account.data.balance = state.balance.toString();\n                this.store.accounts.put(address, account.data);\n                send(account);\n            }\n        })\n        pump(\n            outStream,\n            dnode,\n            outStream,\n            (err) => {\n                if (err) log.error(err);\n            }\n        );\n        dnode.on('remote', (remote) => {\n            const sendUpdate = remote.sendUpdate.bind(remote);\n            this.on('update', sendUpdate)\n        });\n\n        /*setInterval(() => {\n            this.emit('update', 'something');\n        }, 1000)*/\n        this.state.on('change', (state) => {\n            this.emit('update', { state });\n        });\n    }\n}\n\nexport default BackgroundController;","import \"regenerator-runtime/runtime\";\n\nrequire('./manifest.json');\n\nimport extension from 'extensionizer';\nimport endOfStream from 'end-of-stream';\nimport PortStream from 'extension-port-stream';\n\nimport BackgroundController from './controllers/background';\n\nconsole.log('AERGO Wallet Background Script');\nconsole.log('Extension ID', extension.runtime.id);\n\n\nsetupController();\n\nasync function setupController() {\n    const controller = new BackgroundController();\n    extension.runtime.onConnect.addListener(connectRemote);    \n\n    function connectRemote (remotePort) {\n        const processName = remotePort.name;\n        console.log('Establishing connection with', processName);\n\n        controller.state.set('active');\n    \n        const portStream = new PortStream(remotePort);\n        controller.setupCommunication(portStream);\n    \n        controller.uiState.popupOpen = true;\n        endOfStream(portStream, () => {\n            controller.uiState.popupOpen = false;\n            console.log('Closed connection with', processName);\n            controller.state.set('inactive');\n        })\n\n        /*\n\n        const notifId = '';\n        extension.notifications.create(\n            notifId,\n            {\n                type: 'basic',\n                title: 'Aergo Wallet',\n                iconUrl: extension.extension.getURL('0da81dee4755822e45e812c8ce30d733.png'),\n                message: `Hello from the Wallet! Established connection with ${processName}. Yes.`,\n            }\n        );\n        extension.notifications.onClicked.addListener((url) => {\n            if (!txId.startsWith('http')) return;\n            console.log('clicked on', e);\n            extension.tabs.create({ url });\n        });\n\n        */\n    }\n}\n\nchrome.contextMenus.removeAll();\nchrome.contextMenus.create({\n    title: \"Open full page\",\n    contexts: [\"browser_action\"],\n    onclick: function() {\n        extension.tabs.create({url : \"tab.html\"});\n    }\n});\n\nextension.tabs.create({url : \"tab.html\"});\n\n","module.exports = __webpack_public_path__ + \"manifest.json\";"],"sourceRoot":""}