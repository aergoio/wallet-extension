{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/controllers/config.js","webpack:///./src/controllers/tx-scanner.js","webpack:///./src/controllers/state.js","webpack:///./src/controllers/background.js","webpack:///./src/background.js","webpack:///./src/manifest.json"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","config","chains","chainId","nodeUrl","tx_scanner_AergoscanTransactionScanner","AergoscanTransactionScanner","_classCallCheck","this","_createClass","wallet","next","_ref2","_asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","account","blockno","limit","baseUrl","address","q","size","offset","url","response","wrap","_context","prev","spec","abrupt","herajs","console","log","concat","encodeURIComponent","fetch","sent","json","hits","total","map","tx","herajs_wallet_iife","hash","from","meta","to","ts","blockhash","amount","type","status","Status","Confirmed","stop","_x","arguments","_this","_ref3","_callee3","accountSpec","_ref4","bestHeight","_context3","accountManager","getCompleteAccountSpec","getClient","blockchain","fetchAccountTransactionsBefore","_callee2","_context2","_x2","state","State","state_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_idleTimeout","set","events","nextState","_this2","clearTimeout","setTimeout","emit","background_BackgroundController","BackgroundController","background_classCallCheck","background_possibleConstructorReturn","background_getPrototypeOf","id","extensionizer_default","a","runtime","uiState","popupOpen","_lockTimeout","appName","instanceId","use","useStorage","store","then","background_asyncToGenerator","customChains","_arr","_i","firstLoad","datastore","getIndex","keys","useChain","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","done","chain","err","return","keyManager","on","unlocked","pause","transactionManager","resume","lock","getAccounts","accounts","_iterator2","_iteratorNormalCompletion2","_step2","trackAccount","passphrase","unlock","keepUnlocked","setupAndUnlock","getOrAddAccount","activeAccount","onceCb","_this3","accountTracker","removeAllListeners","text","callback","confirm","message","signMessage","buffer","outStream","_this4","dnode","browser_default","_unlock2","_callee8","send","password","_context8","error","_x5","_x6","_lock","_callee9","_context9","_x7","setup","_setup","_callee10","_ref5","_context10","_x8","_x9","isUnlocked","_isUnlocked","_callee11","_context11","_x10","reset","_reset","_callee12","_context12","deleteAllData","_x11","addNetwork","_addNetwork","_callee13","_ref6","_context13","put","_x12","_x13","getBlockchainStatus","_getBlockchainStatus","_callee14","_ref7","_context14","blockHeight","_x14","_x15","_getAccounts","_callee15","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context15","finish","_x16","createAccount","_createAccount","_callee16","_ref8","_context16","_x17","_x18","removeAccount","_removeAccount","_callee17","_ref9","_context17","_x19","_x20","setActiveAccount","_setActiveAccount2","_callee18","_ref10","_context18","_x21","_x22","importAccount","_importAccount","_callee19","_ref11","privateKey","identity","_context19","herajs_crypto_umd","addAccount","importKey","_x23","_x24","exportAccount","_exportAccount","_callee20","_ref12","privkeyEncrypted","_context20","getUnlockedKey","_x25","_x26","sendTransaction","_sendTransaction","_callee21","txTracker","_context21","transaction","txBody","_x27","_x28","_x29","getAccountTx","_getAccountTx","_callee22","txs","_context22","getAccountTransactions","sort","b","_x30","_x31","syncAccountState","_syncAccountState","_callee23","_context23","_x32","_x33","_signMessage2","_callee24","_ref13","signedMessage","_context24","_x34","_x35","getStaking","_getStaking","_callee25","_ref14","_context25","toString","when","_x36","_x37","pump_default","remote","sendUpdate","__webpack_exports__","controller","connectRemote","remotePort","processName","onMessage","addListener","msg","port","action","_text","_activeAccount","input","_text2","sender","getActiveAccount","alert","permissionRequest","postMessage","eventName","substr","Buffer","t1","t2","t3","signature","t4","portStream","extension_port_stream__WEBPACK_IMPORTED_MODULE_3___default","setupCommunication","end_of_stream__WEBPACK_IMPORTED_MODULE_2___default","_controllers_background__WEBPACK_IMPORTED_MODULE_4__","extensionizer__WEBPACK_IMPORTED_MODULE_1___default","onConnect","setupController","chrome","contextMenus","removeAll","title","contexts","onclick","tabs"],"mappings":"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","file":"background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([140,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\n    chains: [\n        {\n            chainId: 'testnet.aergo.io',\n            nodeUrl: 'http://testnet.aergo.io:7845'\n        },\n        {\n            chainId: 'main.aergo.io',\n            nodeUrl: 'https://mainnet-api-http.aergo.io'\n        },\n        {\n            chainId: 'aergo.io',\n            nodeUrl: 'https://mainnet-api-http.aergo.io'\n        },\n        {\n            chainId: 'sqltestnet.aergo.io',\n            nodeUrl: 'https://sqltestnet-api-http.aergo.io'\n        },\n        {\n            chainId: 'dev.chain',\n            nodeUrl: 'http://127.0.0.1:7845'\n        }\n    ]\n};","import { Address } from '@herajs/client';\nimport { Transaction } from '@herajs/wallet';\n\n/**\n * This is a data source for transactionManager.getAccountTransactions.\n * It uses the Aergoscan API which is experimental and subject to change.\n * It is not recommended to use this data source.\n */\nexport class AergoscanTransactionScanner {\n    fetchAccountTransactionsAfter(wallet) {\n        return (next) => async ({ account, blockno, limit }) => {\n            const chainId = account.data.spec.chainId\n            if (chainId !== 'testnet.aergo.io' && chainId !== 'aergo.io') {\n                return next({ account, blockno, limit });\n            }\n            let baseUrl;\n            if (chainId == 'testnet.aergo.io') {\n                baseUrl = 'https://api.aergoscan.io/testnet';\n            }\n            if (chainId == 'aergo.io') {\n                baseUrl = 'https://api.aergoscan.io/main';\n            }\n            const address = new Address(account.data.spec.address);\n            console.log(`[track account] Fetching txs for ${address} on ${chainId} since ${blockno}...`);\n            const q = encodeURIComponent(`(from:${address} OR to:${address}) AND blockno:>${blockno}`);\n            \n            const size = 1000;\n            const offset = 0;\n            const url = `${baseUrl}/transactions?q=${q}&sort=blockno:desc&size=${size}&from=${offset}`;\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(`[track account] Got ${data.hits.length} (of ${data.total}) txs for ${address} since ${blockno}.`);\n            return data.hits.map(tx => new Transaction(tx.hash, {\n                chainId,\n                from: tx.meta.from,\n                to: tx.meta.to,\n                hash: tx.hash,\n                ts: tx.meta.ts,\n                blockhash: '', // TODO: remove or add?\n                blockno: tx.meta.blockno,\n                amount: tx.meta.amount,\n                type: tx.meta.type,\n                status: Transaction.Status.Confirmed\n            }));\n        };\n    }\n\n    fetchAccountTransactions(wallet) {\n        return () => async (account) => {\n            const accountSpec = wallet.accountManager.getCompleteAccountSpec(account.data.spec);\n            const { bestHeight } = await wallet.getClient(accountSpec.chainId).blockchain();\n            return this.fetchAccountTransactionsBefore(wallet)(async () => [])({ account, blockno: bestHeight });\n        };\n    }\n}","import {EventEmitter} from 'events';\n\nconst IDLE_TIMEOUT = 60 * 1000;\n\nclass State extends EventEmitter {\n    constructor() {\n        super();\n        this._idleTimeout = null;\n        this.set('initial');\n    }\n\n    /**\n     * App states: initial -> active -> inactive -> idle\n     * Opening UI switches state to active. Closing UI switches state to inactive.\n     * After being inactive for a certain amount of time, switch to idle.\n     * @param {string} nextState \n     */\n    set(nextState) {\n        if (nextState != 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n        }\n        if (this.state != nextState && nextState == 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n            this._idleTimeout = setTimeout(() => {\n                this.set('idle');\n            }, IDLE_TIMEOUT);\n        }\n        if (this.state != nextState) {\n            console.log(`[state] ${this.state} -> ${nextState}`);\n        }\n        this.state = nextState;\n        this.emit('change', nextState);\n        this.emit(nextState);\n    }\n}\n\nexport default State;","import extension from 'extensionizer';\nimport { EventEmitter } from 'events';\nimport pump from 'pump';\nimport Dnode from 'dnode/browser.js';\n\nimport { Wallet } from '@herajs/wallet';\nimport config from './config';\nimport store from './store';\nimport { AergoscanTransactionScanner } from './tx-scanner';\n\nimport {\n    identifyFromPrivateKey,\n    encryptPrivateKey,\n    encodePrivateKey\n} from '@herajs/crypto';\nimport State from './state';\nimport 'whatwg-fetch';\n\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes) {\n    return bs58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string) {\n    return bs58.decode(bs58string);\n}\n\nconst AUTO_LOCK_TIMEOUT = 60*1000;\nlet notifId = 0;\n\nclass BackgroundController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.id = extension.runtime.id;\n\n        this.uiState = {\n            popupOpen: false\n        }\n        this.state = new State();\n        this._lockTimeout = null;\n\n        this.wallet = new Wallet({\n            appName: 'aergo-browser-wallet',\n            instanceId: this.id\n        });\n        this.wallet.use(AergoscanTransactionScanner);\n        this.wallet.useStorage(store).then(async () => {\n            this.firstLoad();\n            // Load custom defined chains\n            try {\n                const customChains = await this.wallet.datastore.getIndex('settings').get('customChains')\n                for (let chainId of Object.keys(customChains.data)) {\n                    this.wallet.useChain({ chainId, nodeUrl: customChains.data[chainId].nodeUrl});\n                }\n            } catch (e) {\n                // not found\n            }\n        });\n        for (let chain of config.chains) {\n            this.wallet.useChain(chain);\n        }\n\n        this.wallet.keyManager.on('lock', () => {\n            this.emit('update', { unlocked: false });\n            console.log('[lock] locked');\n        });\n        this.wallet.keyManager.on('unlock', () => {\n            this.emit('update', { unlocked: true });\n            console.log('[lock] unlocked');\n        });\n\n        this.state.on('idle', () => {\n            console.log('[state] idle, pausing trackers');\n            this.wallet.accountManager.pause();\n            this.wallet.transactionManager.pause();\n        });\n        this.state.on('active', () => {\n            console.log('[state] active, resuming trackers');\n            this.wallet.accountManager.resume();\n            this.wallet.transactionManager.resume();\n        });\n\n        this.lock();\n    }\n\n    async firstLoad() {\n        const accounts = await this.wallet.accountManager.getAccounts();\n        for (let account of accounts) {\n            this.trackAccount(account);\n        }\n    }\n\n    lock () {\n        this.wallet.lock();\n    }\n    \n    async unlock (passphrase) {\n        await this.wallet.unlock(passphrase);\n        this.keepUnlocked();\n    }\n\n    async setupAndUnlock (passphrase) {\n        await this.wallet.setupAndUnlock(passphrase);\n        this.keepUnlocked();\n    }\n\n    async setActiveAccount({ chainId, address }) {\n        const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n        this.activeAccount = account;\n        console.log('Active account is now', { chainId, address });\n    }\n\n    async getActiveAccount() {\n        //const accounts = await this.wallet.accountManager.getAccounts();\n        //if (!accounts) return null;\n        //return accounts[0];\n        return this.activeAccount;\n    }\n\n    keepUnlocked() {\n        if (this._lockTimeout) {\n            clearTimeout(this._lockTimeout);\n        }\n        this._lockTimeout = setTimeout(() => {\n            console.log('[lock] auto-locking...');\n            this.lock();\n        }, AUTO_LOCK_TIMEOUT);\n    }\n\n    isUiOpen() {\n        return this.uiState.popupOpen;\n    }\n\n    trackAccount(account, onceCb) {\n        const accountTracker = this.wallet.accountManager.trackAccount(account);\n        this.wallet.transactionManager.trackAccount(account);\n        accountTracker.then(t => {\n            t.removeAllListeners('update');\n            t.on('update', account => {\n                console.log('got new state', account);\n                this.emit('update', { accounts: [account] });\n                if (onceCb) {\n                    onceCb(account);\n                    onceCb = false;\n                }\n            });\n        });\n    }\n\n    permissionRequest(text, callback) {\n        const confirmed = confirm(text);\n        if (confirmed) {\n            callback();\n        }\n        /*\n        const thisNotifId = `${notifId++}`;\n        extension.notifications.create(\n            thisNotifId,\n            {\n                type: 'basic',\n                title: 'Aergo Connect',\n                iconUrl: extension.extension.getURL('450dd34960f600f51b44083379e5e15c.png'),\n                message: text,\n                priority: 2,\n                requireInteraction: true,\n                buttons: [\n                    { title: 'Confirm' },\n                ]\n            }\n        );\n        chrome.notifications.onButtonClicked.addListener(function(id) {\n            if (id === thisNotifId) {\n                callback();\n            }\n        });\n        */\n    }\n\n    async signMessage ({ address, chainId, message }) {\n        this.keepUnlocked(); \n        const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n        return await this.wallet.keyManager.signMessage(account, Buffer.from(message));\n    }\n\n    setupCommunication (outStream) {\n        // Setup async rpc stream to UI\n        const dnode = Dnode({\n            unlock: async ({ password }, send) => {\n                try {\n                    await this.unlock(password);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                    return;\n                }\n                send({});\n            },\n            lock: async (send) => {\n                this.lock();\n                send({});\n            },\n            setup: async ({ password }, send) => {\n                await this.setupAndUnlock(password);\n                send({});\n            },\n            isUnlocked: async (send) => {\n                send(this.wallet.unlocked);\n            },\n            reset: async (send) => {\n                await this.wallet.deleteAllData();\n                send();\n            },\n            addNetwork: async ({ chainId, nodeUrl }, send) => {\n                console.log('Adding chain', { chainId, nodeUrl });\n                this.wallet.useChain({ chainId, nodeUrl });\n                let chains = {};\n                try {\n                    chains = (await this.wallet.datastore.getIndex('settings').get('customChains')).data;\n                } catch(e) {\n                    // not found\n                }\n                chains[chainId] = { chainId, nodeUrl };\n                await this.wallet.datastore.getIndex('settings').put({\n                    key: 'customChains',\n                    data: chains\n                });\n                send({});\n            },\n            getBlockchainStatus: async ({ chainId }, send) => {\n                const status = await this.wallet.getClient(chainId).blockchain();\n                send({\n                    blockHeight: status.bestHeight,\n                    chainId\n                });\n            },\n            getAccounts: async (send) => {\n                this.keepUnlocked();\n                const accounts = await this.wallet.accountManager.getAccounts();\n                for (let account of accounts) {\n                    this.trackAccount(account);\n                }\n                send(accounts);\n            },\n            createAccount: async ({ chainId }, send) => {\n                this.keepUnlocked();\n                \n                try {\n                    const account = await this.wallet.accountManager.createAccount(chainId);\n                    this.trackAccount(account);\n                    send(account.data.spec);\n                } catch(e) {\n                    send({error: e});\n                }\n            },\n            removeAccount: async ({ chainId, address }, send) => {\n                await this.wallet.accountManager.removeAccount({ chainId, address });\n                send();\n            },\n            setActiveAccount: async ({ chainId, address }, send) => {\n                await this.setActiveAccount({ chainId, address });\n                send();\n            },\n            importAccount: async ({ privateKey, chainId }, send) => {\n                this.keepUnlocked();\n                const identity = identifyFromPrivateKey(privateKey);\n                const address = identity.address;\n                try {\n                    const account = await this.wallet.accountManager.addAccount({ address, chainId });\n                    console.log('importAccount', account, privateKey);\n                    await this.wallet.keyManager.importKey({\n                        account: account,\n                        privateKey: privateKey\n                    });\n                    this.trackAccount(account);\n                    send(account.data.spec);\n                } catch(e) {\n                    console.error(e);\n                    send({ error: 'Could not import account. '+e });\n                }\n            },\n            exportAccount: async ({ address, chainId, password }, send) => {\n                this.keepUnlocked();\n                const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n                const key = await this.wallet.keyManager.getUnlockedKey(account);\n                console.log(account, key);\n                const privateKey = key.data.privateKey;\n                const privkeyEncrypted = await encryptPrivateKey(privateKey, password);\n                send({privateKey: encodePrivateKey(privkeyEncrypted)});\n            },\n            sendTransaction: async (tx, chainId, send) => {\n                this.keepUnlocked();\n                try {\n                    const txTracker = await this.wallet.sendTransaction({\n                        address: tx.from,\n                        chainId: chainId\n                    }, tx);\n                    console.log(txTracker, txTracker.transaction.txBody);\n                    send({ tx: txTracker.transaction.txBody });\n                } catch(e) {\n                    console.error(e);\n                    send({ error: e.message || ''+e });\n                }\n            },\n            getAccountTx: async (accountSpec, send) => {\n                console.log('getAccountTx', accountSpec);\n                if (!accountSpec.address) return send({});\n                const txs = await this.wallet.transactionManager.getAccountTransactions(accountSpec);\n                txs.sort((a, b) => (a.data.ts < b.data.ts ? 1 : (a.data.ts == b.data.ts ? 0 : -1)));\n                send(txs);\n            },\n            syncAccountState: async (accountSpec, send) => {\n                if (!accountSpec.address) return send({});\n                const account = await this.wallet.accountManager.getOrAddAccount(accountSpec);\n                this.trackAccount(account, send);\n            },\n            signMessage: async ({ address, chainId, message }, send) => {\n                try {\n                    const signedMessage = await this.signMessage({ address, chainId, message });\n                    send({ signedMessage });\n                } catch (e) {\n                    console.error(e);\n                    send({ error: e });\n                }\n            },\n            getStaking: async ({ address, chainId }, send) => {\n                this.keepUnlocked();\n                try {\n                    const result = await this.wallet.getClient(chainId).getStaking(address);\n                    send({\n                        amount: result.amount.toString(),\n                        when: result.when\n                    });\n                } catch(e) {\n                    send({ error: e });\n                }\n            }\n        })\n        pump(\n            outStream,\n            dnode,\n            outStream,\n            (err) => {\n                if (err) log.error(err);\n            }\n        );\n        dnode.on('remote', (remote) => {\n            const sendUpdate = remote.sendUpdate.bind(remote);\n            this.on('update', sendUpdate)\n        });\n\n        /*setInterval(() => {\n            this.emit('update', 'something');\n        }, 1000)*/\n        this.state.on('change', (state) => {\n            this.emit('update', { state });\n        });\n    }\n}\n\nexport default BackgroundController;","import \"regenerator-runtime/runtime\";\n\nrequire('./manifest.json');\n\nimport extension from 'extensionizer';\nimport endOfStream from 'end-of-stream';\nimport PortStream from 'extension-port-stream';\n\nimport BackgroundController from './controllers/background';\n\nconsole.log('AERGO Wallet Background Script');\nconsole.log('Extension ID', extension.runtime.id);\n\nsetupController();\n\nasync function setupController() {\n    const controller = new BackgroundController();\n    extension.runtime.onConnect.addListener(connectRemote);\n    \n    function connectRemote (remotePort) {\n        const processName = remotePort.name;\n        console.log('Establishing connection with', processName);\n\n        if (processName === 'external') {\n            // Receive messages from external web pages\n            remotePort.onMessage.addListener(async (msg, port) => {\n                if (msg.type !== 'AERGO_REQUEST') return;\n                console.log('received message', msg, port.sender.url);\n                const action = msg.action || '';\n                if (action === 'ACTIVE_ACCOUNT') {\n                    const activeAccount = await controller.getActiveAccount();\n                    if (!activeAccount) {\n                        const text = `The website at\\n\\n${port.sender.url}\\n\\n` +\n                            `asks for permission to access your active account.\\n\\n`+\n                            `You have no active account. Make sure to select an account inside Aergo Connect.`;\n                        alert(text);\n                        return;\n                    }\n                    const text = `The website at\\n\\n${port.sender.url}\\n\\nasks for permission to access your active account\\n\\n${activeAccount.key}`;\n                    controller.permissionRequest(text, function() {\n                        port.postMessage({\n                            type: 'AERGO_RESPONSE',\n                            eventName: 'AERGO_ACTIVE_ACCOUNT',\n                            result: {\n                                account: activeAccount.data.spec\n                            }\n                        });\n                    })\n                }\n                if (action === 'SIGN') {\n                    const activeAccount = await controller.getActiveAccount();\n                    const input = msg.data.hash;\n                    const text = `The website at\\n\\n${port.sender.url}\\n\\nasks for permission to sign the message\\n\\n${input}\\n\\nwith your account\\n\\n${activeAccount.key}`;\n                    let signMessage = input;\n                    if (input.substr(0, 2) === '0x') {\n                        try {\n                            signMessage = Buffer.from(input.substr(2), \"hex\");\n                        } catch (e) {\n                            console.error(e);\n                            return;\n                        }\n                    }\n\n                    controller.permissionRequest(text, async function() {\n                        port.postMessage({\n                            type: 'AERGO_RESPONSE',\n                            eventName: 'AERGO_SIGN_RESULT',\n                            result: {\n                                account: activeAccount.data.spec,\n                                signature: await controller.signMessage({\n                                    address: activeAccount.data.spec.address,\n                                    chainId: activeAccount.data.spec.chainId,\n                                    message: signMessage,\n                                })\n                            }\n                        });\n                    });\n                }\n            });\n        } else {\n            const portStream = new PortStream(remotePort);\n            controller.state.set('active');\n            controller.setupCommunication(portStream);\n            controller.uiState.popupOpen = true;\n            endOfStream(portStream, () => {\n                controller.uiState.popupOpen = false;\n                console.log('Closed connection with', processName);\n                controller.state.set('inactive');\n            })\n        }\n\n        /*\n\n        const notifId = '';\n        extension.notifications.create(\n            notifId,\n            {\n                type: 'basic',\n                title: 'Aergo Wallet',\n                iconUrl: extension.extension.getURL('0da81dee4755822e45e812c8ce30d733.png'),\n                message: `Hello from the Wallet! Established connection with ${processName}. Yes.`,\n            }\n        );\n        extension.notifications.onClicked.addListener((url) => {\n            if (!txId.startsWith('http')) return;\n            console.log('clicked on', e);\n            extension.tabs.create({ url });\n        });\n\n        */\n    }\n}\n\nchrome.contextMenus.removeAll();\nchrome.contextMenus.create({\n    title: \"Open full page\",\n    contexts: [\"browser_action\"],\n    onclick: function() {\n        extension.tabs.create({url : \"tab.html\"});\n    }\n});\n\nif (process.env.NODE_ENV === 'development') {\n    extension.tabs.create({url : \"tab.html\"});\n}\n","module.exports = __webpack_public_path__ + \"manifest.json\";"],"sourceRoot":""}