{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/controllers/state.js","webpack:///./src/controllers/transactions.js","webpack:///./src/controllers/accounts.js","webpack:///./src/controllers/background.js","webpack:///./src/background.js","webpack:///./src/manifest.json"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","controllers_state","State","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_idleTimeout","set","events","nextState","_this2","clearTimeout","state","setTimeout","console","log","concat","emit","transactions","TransactionManager","store","transactions_classCallCheck","transactions_possibleConstructorReturn","transactions_getPrototypeOf","intervals","lastBlockPromise","account","blockno","size","offset","id","q","encodeURIComponent","address","url","chain_provider","chain","apiUrl","fetch","response","json","hits","total","Promise","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee2","resolve","bestBlock","wrap","_context2","prev","next","sent","stop","_x4","arguments","stopTrackingAccount","initialSyncDone","sync","_ref2","_callee4","lastBlockno","txs","_context4","open","lastSync","e","_getTransactionsSince","all","map","tx","put","hash","_objectSpread","meta","from","to","_getBestBlock","no","time","ts","nodeClient","getState","balance","toString","accounts","setInterval","clearInterval","AccountManager","transactionManager","accounts_classCallCheck","accounts_possibleConstructorReturn","accounts_getPrototypeOf","accountsById","trackedAccounts","initialLoad","on","startTracking","stopTracking","getAll","_iterator","iterator","_iteratorNormalCompletion","_step","done","loadFromStore","_iterator2","_iteratorNormalCompletion2","_step2","trackAccount","_toConsumableArray","_iterator3","_iteratorNormalCompletion3","_step3","encodeTxHash","bytes","bs58_default","a","encode","buffer","background","BackgroundController","background_classCallCheck","background_possibleConstructorReturn","background_getPrototypeOf","extensionizer_default","runtime","uiState","popupOpen","aergo","_lockTimeout","lock","accountManager","password","settings","encryptedId","herajs_crypto","Error","masterPassword","unlocked","keepUnlocked","unlock","outStream","_this3","dnode","browser_default","_unlock2","background_asyncToGenerator","_callee3","send","_context3","t0","error","abrupt","_x3","_lock","_x5","setup","_setup","_callee5","_context5","setupAndUnlock","_x6","_x7","isUnlocked","_isUnlocked","_callee6","_context6","_x8","reset","_reset","_callee7","_context7","clear","_x9","getBlockchainStatus","_getBlockchainStatus","_callee8","status","_context8","blockchain","blockHeight","bestHeight","chainId","_x10","getAccounts","_getAccounts","_callee9","_context9","_x11","createAccount","_createAccount","_callee10","_ref3","network","identity","createdAddress","_context10","t1","t2","t3","publicKey","encodeCompressed","privateKey","toArray","t4","t5","t6","_x12","_x13","importAccount","_importAccount","_callee11","_ref4","_context11","_x14","_x15","exportAccount","_exportAccount","_callee12","_ref5","privkeyEncrypted","_context12","_x16","_x17","sendTransaction","_sendTransaction","_callee13","amount","encodedHash","_context13","herajs","toUnit","getNonce","nonce","keyPair","sign","sendSignedTransaction","Date","toISOString","type","payload","payload0","_x18","_x19","getAccountTx","_getAccountTx","_callee14","range","txsFrom","txsTo","_context14","IDBKeyRange","bound","getAllIndex","filter","has","add","Set","sort","b","_x20","_x21","syncAccountState","_syncAccountState","_callee15","_context15","_x22","_x23","pump_default","err","remote","sendUpdate","_callee","controller","connectRemote","_context","remotePort","processName","portStream","extension_port_stream_default","setupCommunication","end_of_stream_default","onConnect","addListener","setupController","chrome","contextMenus","removeAll","title","contexts","onclick","tabs"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,aAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,MAAA,QAEAU,q+BCpJA,IAsCe0C,cAnCX,SAAAC,IAAc,IAAAC,EAAA,mGAAAC,CAAAC,KAAAH,IACVC,EAAAG,EAAAD,KAAAE,EAAAL,GAAAjD,KAAAoD,QACKG,aAAe,KACpBL,EAAKM,IAAI,WAHCN,8OADEO,EAAA,6FAaZC,GAAW,IAAAC,EAAAP,KACM,YAAbM,GACIN,KAAKG,cACLK,aAAaR,KAAKG,cAGtBH,KAAKS,OAASH,GAA0B,YAAbA,IACvBN,KAAKG,cACLK,aAAaR,KAAKG,cAEtBH,KAAKG,aAAeO,WAAW,WAC3BH,EAAKH,IAAI,SA1BJ,MA6BTJ,KAAKS,OAASH,GACdK,QAAQC,IAAR,WAAAC,OAAuBb,KAAKS,MAA5B,QAAAI,OAAwCP,IAE5CN,KAAKS,MAAQH,EACbN,KAAKc,KAAK,SAAUR,GACpBN,KAAKc,KAAKR,wjDChClB,IAiFeS,cA9EX,SAAAC,EAAYC,GAAO,IAAAnB,EAAA,mGAAAoB,CAAAlB,KAAAgB,IACflB,EAAAqB,EAAAnB,KAAAoB,EAAAJ,GAAApE,KAAAoD,QACKqB,aACLvB,EAAKmB,MAAQA,EACbnB,EAAKwB,oBAJUxB,8OADUO,EAAA,4JAQDkB,EAASC,qHAASC,iCAAK,IAAKC,iCAAO,EAC3Df,QAAQC,IAAR,mBAAAC,OAA+BU,EAAQI,GAAvC,WAAAd,OAAmDW,EAAnD,QACMI,EAAIC,mBAAkB,SAAAhB,OAAUU,EAAQzF,KAAKgG,QAAvB,WAAAjB,OAAwCU,EAAQzF,KAAKgG,QAArD,mBAAAjB,OAA8EW,IACpGO,EAAMtF,OAAAuF,EAAA,EAAAvF,CAAc8E,EAAQzF,KAAKmG,OAAOC,OAAlC,mBAAArB,OAA4De,EAA5D,4BAAAf,OAAwFY,EAAxF,UAAAZ,OAAqGa,aAC1FS,MAAMJ,iBAAvBK,mBACaA,EAASC,sBAAtBvG,SACN6E,QAAQC,IAAR,OAAAC,OAAmB/E,EAAKwG,KAAKhG,OAA7B,SAAAuE,OAA2C/E,EAAKyG,MAAhD,cAAA1B,OAAkEU,EAAQI,GAA1E,WAAAd,OAAsFW,EAAtF,wBACO1F,EAAKwG,+LAGIf,4FACZvB,KAAKsB,iBAAiBC,EAAQzF,KAAKmG,uCAAqBjC,KAAKsB,iBAAiBC,EAAQzF,KAAKmG,6DAC/FjC,KAAKsB,iBAAiBC,EAAQzF,KAAKmG,OAAS,IAAIO,QAAJ,eAAAC,EAAAC,EAAAC,mBAAAC,KAAY,SAAAC,EAAOC,GAAP,IAAAf,EAAAK,EAAAW,EAAA,OAAAJ,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9CpB,EAAMtF,OAAAuF,EAAA,EAAAvF,CAAc8E,EAAQzF,KAAKmG,OAAOC,OAAlC,cADwCe,EAAAE,KAAA,EAE7BhB,MAAMJ,GAFuB,cAE9CK,EAF8Ca,EAAAG,KAAAH,EAAAE,KAAA,EAG5Bf,EAASC,OAHmB,OAG9CU,EAH8CE,EAAAG,KAIpDN,EAAQC,GAJ4C,wBAAAE,EAAAI,SAAAR,EAAA7C,SAAZ,gBAAAsD,GAAA,OAAAb,EAAAxF,MAAA+C,KAAAuD,YAAA,aAMvBvD,KAAKsB,iBAAiBC,EAAQzF,KAAKmG,qBAAlD9E,SACN6C,KAAKsB,iBAAiBC,EAAQzF,KAAKmG,OAAS,uBACrC9E,4IAOEoE,GAAS,IAAAhB,EAAAP,UACwB,IAA/BA,KAAKqB,UAAUE,EAAQI,KAAsD,OAA/B3B,KAAKqB,UAAUE,EAAQI,KAC5E3B,KAAKwD,oBAAoBjC,GAE7B,IAAIkC,GAAkB,EAChBC,EAAI,eAAAC,EAAAjB,EAAAC,mBAAAC,KAAG,SAAAgB,IAAA,IAAAC,EAAAC,EAAAf,EAAAtC,EAAA,OAAAkC,mBAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACH5C,EAAKU,MAAM+C,OADR,OAELH,EAAc,EAClB,IACIA,EAActC,EAAQzF,KAAKmI,SAASzC,QACtC,MAAM0C,IALC,OAAAH,EAAAZ,KAAA,EAMS5C,EAAK4D,sBAAsB5C,EAASsC,GAN7C,cAMHC,EANGC,EAAAX,KAAAW,EAAAZ,KAAA,EAOHX,QAAQ4B,IAAIN,EAAIO,IAAI,SAAAC,GAAE,OAAI/D,EAAKU,MAAMF,aAAawD,IAAID,EAAGE,KAA/BC,KACzBH,EAAGI,MACNC,KAAI,GAAA9D,OAAKU,EAAQzF,KAAKmG,MAAlB,KAAApB,OAA2ByD,EAAGI,KAAKC,MACvCC,GAAE,GAAA/D,OAAKU,EAAQzF,KAAKmG,MAAlB,KAAApB,OAA2ByD,EAAGI,KAAKE,UAVhC,cAAAb,EAAAZ,KAAA,GAYe5C,EAAKsE,cAActD,GAZlC,WAYHwB,EAZGgB,EAAAX,KAaT7B,EAAQzF,KAAKmI,UACTzC,QAASuB,EAAU2B,KAAKI,GACxBC,KAAMhC,EAAU2B,KAAKM,MAErBlB,EAAIxH,OAAS,IAAMmH,EAjBd,CAAAM,EAAAZ,KAAA,gBAAAY,EAAAZ,KAAA,GAmBe1G,OAAAuF,EAAA,EAAAvF,CAAc8E,EAAQzF,KAAKmG,OAAOgD,aAAaC,SAAS3D,EAAQzF,KAAKgG,SAnBpF,QAmBCrB,EAnBDsD,EAAAX,KAoBL7B,EAAQzF,KAAKqJ,QAAU1E,EAAM0E,QAAQC,WACrC3B,GAAkB,EArBb,eAuBT9C,QAAQC,IAAR,IAAAC,OAAgBU,EAAQI,GAAxB,YAAAd,OAAqCiD,EAAIxH,OAAzC,yBAAAuE,OAAuEU,EAAQzF,KAAKqJ,QAApF,MAvBSpB,EAAAZ,KAAA,GAwBH5C,EAAKU,MAAMoE,SAASd,IAAIhD,EAAQI,GAAIJ,EAAQzF,MAxBzC,yBAAAiI,EAAAV,SAAAO,EAAA5D,SAAH,yBAAA2D,EAAA1G,MAAA+C,KAAAuD,YAAA,GA0BVvD,KAAKqB,UAAUE,EAAQI,IAAM2D,YAAY5B,EApE3B,MAqEdA,gDAMgBnC,GAChBgE,cAAcvF,KAAKqB,UAAUE,EAAQI,KACrC3B,KAAKqB,UAAUE,EAAQI,IAAM,w8CC9BtB0D,cA/CX,SAAAG,EAAYvE,EAAOR,EAAOgF,GAAoB,IAAA3F,EAAA,mGAAA4F,CAAA1F,KAAAwF,IAC1C1F,EAAA6F,EAAA3F,KAAA4F,EAAAJ,GAAA5I,KAAAoD,QACKqB,aACLvB,EAAKmB,MAAQA,EACbnB,EAAKW,MAAQA,EACbX,EAAK2F,mBAAqBA,EAC1B3F,EAAKuF,YACLvF,EAAK+F,gBACL/F,EAAKgG,mBACLhG,EAAKiG,aAAc,EAEnBjG,EAAKW,MAAMuF,GAAG,SAAU,WACpBrF,QAAQC,IAAI,iBACZd,EAAKmG,kBAGTnG,EAAKW,MAAMuF,GAAG,OAAQ,WAClBrF,QAAQC,IAAI,eACZd,EAAKoG,iBAlBiCpG,8OADrBO,EAAA,qQAwBfL,KAAKiB,MAAM+C,8BACKhE,KAAKiB,MAAMoE,SAASc,gBAC1C,IADAnG,KAAKqF,4CACLe,EAAoBpG,KAAKqF,SAAzB3G,OAAA2H,cAAAC,GAAAC,EAAAH,EAAAjD,QAAAqD,MAAAF,GAAA,EAAS/E,EAA0BgF,EAAA3H,MAC/BoB,KAAK6F,aAAatE,EAAQI,IAAMJ,qiBAK9BvB,KAAKyG,uBAEX,IADAzG,KAAK+F,aAAc,8BACnBW,EAAoB1G,KAAKqF,SAAzB3G,OAAA2H,cAAAM,GAAAC,EAAAF,EAAAvD,QAAAqD,MAAAG,GAAA,EAASpF,EAA0BqF,EAAAhI,MAC/BoB,KAAKyF,mBAAmBoB,aAAatF,4OAEzCvB,KAAK8F,gBAALgB,EAA2B9G,KAAKqF,UAChC1E,QAAQC,IAAR,YAAAC,OAAwBb,KAAK8F,gBAAgBxJ,OAA7C,+TAIA,gCAAAyK,EAAoB/G,KAAK8F,gBAAzBpH,OAAA2H,cAAAW,GAAAC,EAAAF,EAAA5D,QAAAqD,MAAAQ,GAAA,EAASzF,EAAiC0F,EAAArI,MACtCoB,KAAKyF,mBAAmBjC,oBAAoBjC,i+CCxBjD,SAAS2F,EAAaC,GACzB,OAAOC,EAAAC,EAAKC,OAAOC,EAAA,OAAO5C,KAAKwC,IAOnC,IAmQeK,eAhQX,SAAAC,IAAc,IAAA3H,EAAA,mGAAA4H,CAAA1H,KAAAyH,IACV3H,EAAA6H,EAAA3H,KAAA4H,EAAAH,GAAA7K,KAAAoD,QAEK2B,GAAKkG,EAAAR,EAAUS,QAAQnG,GAE5B7B,EAAKiI,SACDC,WAAW,GAEflI,EAAKmI,MAAQxL,OAAAuF,EAAA,EAAAvF,CAAcuF,EAAA,GAAeiD,aAC1CnF,EAAKmB,MAAQ,IAAIA,EAAA,EAEjBnB,EAAK2F,mBAAqB,IAAI1E,EAAmBjB,EAAKmB,OAEtDnB,EAAKW,MAAQ,IAAIb,EACjBE,EAAKoI,aAAe,KACpBpI,EAAKqI,OAELrI,EAAKsI,eAAiB,IAAI/C,EAAevF,EAAKmB,MAAOnB,EAAKW,MAAOX,EAAK2F,oBAjB5D3F,8OADiBO,EAAA,6IAqBjBgI,wGACJrI,KAAKiB,MAAM+C,8BACShE,KAAKiB,MAAMqH,SAAS9J,IAAI,6BAA5C+J,2BAEe9L,OAAA+L,EAAA,kBAAA/L,CAAkB8L,EAAYzM,KAAMuM,yEAE/C,IAAII,MAAM,8BAGpBzI,KAAK0I,eAAiBL,EACtBrI,KAAK2I,UAAW,EAChB3I,KAAKc,KAAK,UAAY6H,UAAU,IAChC3I,KAAK4I,eACLjI,QAAQC,IAAI,oNAGMyH,wGACZrI,KAAKiB,MAAM+C,8BAESvH,OAAA+L,EAAA,kBAAA/L,CAAkB8K,EAAA,OAAO5C,KAAK3E,KAAK2B,IAAK0G,iBAA5DE,kBACAvI,KAAKiB,MAAMqH,SAAS/D,IAAI,cAAegE,0BACvCvI,KAAKiB,MAAMqH,SAAS/D,IAAI,eAAe,2BACvCvE,KAAK6I,OAAOR,8IAGP,IAAA9H,EAAAP,KACPA,KAAKkI,cACL1H,aAAaR,KAAKkI,cAEtBlI,KAAKkI,aAAexH,WAAW,WAC3BC,QAAQC,IAAI,0BACZL,EAAK4H,QAtDS,oCA2DlBnI,KAAK0I,eAAiB,GACtB1I,KAAK2I,UAAW,EAChB3I,KAAKc,KAAK,UAAY6H,UAAU,IAChChI,QAAQC,IAAI,oDAIZ,OAAOZ,KAAK+H,QAAQC,qDAGJc,GAAW,IAAAC,EAAA/I,KAErBgJ,EAAQC,KACVJ,OAAM,eAAAK,EAAAC,EAAAxG,mBAAAC,KAAE,SAAAwG,EAAA3G,EAAqB4G,GAArB,IAAAhB,EAAA,OAAA1F,mBAAAK,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAASkF,EAAT5F,EAAS4F,SAATiB,EAAApG,KAAA,EAAAoG,EAAAnG,KAAA,EAEM4F,EAAKF,OAAOR,GAFlB,OAAAiB,EAAAnG,KAAA,uBAAAmG,EAAApG,KAAA,EAAAoG,EAAAC,GAAAD,EAAA,SAIA3I,QAAQ6I,MAARF,EAAAC,IACAF,GAAOG,MAAO,GAAAF,EAAAC,KALdD,EAAAG,OAAA,kBAQJJ,MARI,yBAAAC,EAAAjG,SAAA+F,EAAApJ,OAAA,UAAF,gBAAA0J,EAAApG,GAAA,OAAA4F,EAAAjM,MAAA+C,KAAAuD,YAAA,GAUN4E,KAAI,eAAAwB,EAAAR,EAAAxG,mBAAAC,KAAE,SAAAgB,EAAOyF,GAAP,OAAA1G,mBAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACF4F,EAAKZ,OACLkB,MAFE,wBAAAtF,EAAAV,SAAAO,EAAA5D,SAAF,gBAAA4J,GAAA,OAAAD,EAAA1M,MAAA+C,KAAAuD,YAAA,GAIJsG,MAAK,eAAAC,EAAAX,EAAAxG,mBAAAC,KAAE,SAAAmH,EAAApG,EAAqB0F,GAArB,IAAAhB,EAAA,OAAA1F,mBAAAK,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAASkF,EAAT1E,EAAS0E,SAAT2B,EAAA7G,KAAA,EACG4F,EAAKkB,eAAe5B,GADvB,OAEHgB,MAFG,wBAAAW,EAAA3G,SAAA0G,EAAA/J,SAAF,gBAAAkK,EAAAC,GAAA,OAAAL,EAAA7M,MAAA+C,KAAAuD,YAAA,GAIL6G,WAAU,eAAAC,EAAAlB,EAAAxG,mBAAAC,KAAE,SAAA0H,EAAOjB,GAAP,OAAA1G,mBAAAK,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OACRkG,EAAKN,EAAKJ,UADF,wBAAA4B,EAAAlH,SAAAiH,EAAAtK,SAAF,gBAAAwK,GAAA,OAAAH,EAAApN,MAAA+C,KAAAuD,YAAA,GAGVkH,MAAK,eAAAC,EAAAvB,EAAAxG,mBAAAC,KAAE,SAAA+H,EAAOtB,GAAP,OAAA1G,mBAAAK,KAAA,SAAA4H,GAAA,cAAAA,EAAA1H,KAAA0H,EAAAzH,MAAA,cAAAyH,EAAAzH,KAAA,EACG4F,EAAK9H,MAAM+C,OADd,cAAA4G,EAAAzH,KAAA,EAEG4F,EAAK9H,MAAMoE,SAASwF,QAFvB,cAAAD,EAAAzH,KAAA,EAGG4F,EAAK9H,MAAMF,aAAa8J,QAH3B,cAAAD,EAAAzH,KAAA,EAIG4F,EAAK9H,MAAMqH,SAASuC,QAJvB,OAKHxB,IALG,wBAAAuB,EAAAvH,SAAAsH,EAAA3K,SAAF,gBAAA8K,GAAA,OAAAJ,EAAAzN,MAAA+C,KAAAuD,YAAA,GAOLwH,oBAAmB,eAAAC,EAAA7B,EAAAxG,mBAAAC,KAAE,SAAAqI,EAAO5B,GAAP,IAAA6B,EAAA,OAAAvI,mBAAAK,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cAAAgI,EAAAhI,KAAA,EACI4F,EAAKd,MAAMmD,aADf,OACXF,EADWC,EAAA/H,KAEjBiG,GACIgC,YAAaH,EAAOI,WACpBC,QAASvJ,EAAA,IAJI,wBAAAmJ,EAAA9H,SAAA4H,EAAAjL,SAAF,gBAAAwL,GAAA,OAAAR,EAAA/N,MAAA+C,KAAAuD,YAAA,GAOnBkI,YAAW,eAAAC,EAAAvC,EAAAxG,mBAAAC,KAAE,SAAA+I,EAAOtC,GAAP,IAAAhE,EAAA,OAAA1C,mBAAAK,KAAA,SAAA4I,GAAA,cAAAA,EAAA1I,KAAA0I,EAAAzI,MAAA,cACT4F,EAAKH,eADIgD,EAAAzI,KAAA,EAEH4F,EAAK9H,MAAM+C,OAFR,cAAA4H,EAAAzI,KAAA,EAGc4F,EAAK9H,MAAMoE,SAASc,SAHlC,OAGHd,EAHGuG,EAAAxI,KAITiG,EAAKhE,GAJI,wBAAAuG,EAAAvI,SAAAsI,EAAA3L,SAAF,gBAAA6L,GAAA,OAAAH,EAAAzO,MAAA+C,KAAAuD,YAAA,GAMXuI,cAAa,eAAAC,EAAA5C,EAAAxG,mBAAAC,KAAE,SAAAoJ,EAAAC,EAAoB5C,GAApB,IAAA6C,EAAAjK,EAAAkK,EAAAC,EAAA,OAAAzJ,mBAAAK,KAAA,SAAAqJ,GAAA,cAAAA,EAAAnJ,KAAAmJ,EAAAlJ,MAAA,cAAS+I,EAATD,EAASC,QACpBnD,EAAKH,eACC3G,EAAQiK,GAAWlK,EAAA,EAFdqK,EAAAlJ,KAAA,EAGY1G,OAAA+L,EAAA,eAAA/L,GAHZ,cAGL0P,EAHKE,EAAAjJ,KAILgJ,EAAiBD,EAASrK,QAJrBuK,EAAAlJ,KAAA,EAKL4F,EAAK9H,MAAM+C,OALN,cAAAqI,EAAA9C,GAMLR,EAAK9H,MAAMoE,SANNgH,EAAAC,GAAA,GAAAzL,OAMsBoB,EANtB,KAAApB,OAM+BuL,GAN/BC,EAAAE,GAOEH,EAPFC,EAAAG,GASIL,EAASM,UAAUC,mBATvBL,EAAAlJ,KAAA,GAUW1G,OAAA+L,EAAA,kBAAA/L,CAAkB8K,EAAA,OAAO5C,KAAKwH,EAASQ,WAAWC,WAAY7D,EAAKL,gBAV9E,eAAA2D,EAAAQ,GAAAR,EAAAjJ,KAAAiJ,EAAAS,GAWA7K,EAXAoK,EAAAU,IAOPjL,QAPOuK,EAAAE,GAQPpH,QAAS,QACTsH,UATOJ,EAAAG,GAUPG,WAVON,EAAAQ,GAWP5K,MAXOoK,EAAAS,IAAAT,EAAAlJ,KAAA,GAAAkJ,EAAA9C,GAMehF,IANf3H,KAAAyP,EAAA9C,GAAA8C,EAAAC,GAAAD,EAAAU,IAAA,QAaXhE,EAAKX,eAAenC,gBACpBoD,GAAMvH,QAASsK,IAdJ,yBAAAC,EAAAhJ,SAAA2I,EAAAhM,SAAF,gBAAAgN,EAAAC,GAAA,OAAAlB,EAAA9O,MAAA+C,KAAAuD,YAAA,GAgBb2J,cAAa,eAAAC,EAAAhE,EAAAxG,mBAAAC,KAAE,SAAAwK,EAAAC,EAAgChE,GAAhC,IAAAsD,EAAAT,EAAAjK,EAAAkK,EAAAC,EAAA,OAAAzJ,mBAAAK,KAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAnK,MAAA,cAASwJ,EAATU,EAASV,WAAYT,EAArBmB,EAAqBnB,QAChCnD,EAAKH,eACC3G,EAAQiK,GAAWlK,EAAA,EACnBmK,EAAW1P,OAAA+L,EAAA,uBAAA/L,CAAuBkQ,GAClCP,EAAiBD,EAASrK,QAJrBwL,EAAAnK,KAAA,EAKL4F,EAAK9H,MAAM+C,OALN,cAAAsJ,EAAA/D,GAMLR,EAAK9H,MAAMoE,SANNiI,EAAAhB,GAAA,GAAAzL,OAMsBoB,EANtB,KAAApB,OAM+BuL,GAN/BkB,EAAAf,GAOEH,EAPFkB,EAAAd,GASIL,EAASM,UAAUC,mBATvBY,EAAAnK,KAAA,GAUW1G,OAAA+L,EAAA,kBAAA/L,CAAkB8K,EAAA,OAAO5C,KAAKwH,EAASQ,WAAWC,WAAY7D,EAAKL,gBAV9E,eAAA4E,EAAAT,GAAAS,EAAAlK,KAAAkK,EAAAR,GAWA7K,EAXAqL,EAAAP,IAOPjL,QAPOwL,EAAAf,GAQPpH,QAAS,QACTsH,UATOa,EAAAd,GAUPG,WAVOW,EAAAT,GAWP5K,MAXOqL,EAAAR,IAAAQ,EAAAnK,KAAA,GAAAmK,EAAA/D,GAMehF,IANf3H,KAAA0Q,EAAA/D,GAAA+D,EAAAhB,GAAAgB,EAAAP,IAAA,QAaXhE,EAAKX,eAAenC,gBACpBoD,GAAMvH,QAASsK,IAdJ,yBAAAkB,EAAAjK,SAAA+J,EAAApN,SAAF,gBAAAuN,EAAAC,GAAA,OAAAL,EAAAlQ,MAAA+C,KAAAuD,YAAA,GAgBbkK,cAAa,eAAAC,EAAAvE,EAAAxG,mBAAAC,KAAE,SAAA+K,EAAAC,EAAyBvE,GAAzB,IAAA1H,EAAA0G,EAAA9G,EAAAoL,EAAAkB,EAAA,OAAAlL,mBAAAK,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,cAASxB,EAATiM,EAASjM,GAAI0G,EAAbuF,EAAavF,SACxBU,EAAKH,eADMkF,EAAA3K,KAAA,EAEW4F,EAAK9H,MAAMoE,SAAS7G,IAAImD,GAFnC,cAELJ,EAFKuM,EAAA1K,KAAA0K,EAAA5K,KAAA,EAAA4K,EAAA3K,KAAA,EAKY1G,OAAA+L,EAAA,kBAAA/L,CAAkB8E,EAAQzF,KAAK6Q,WAAY5D,EAAKL,gBAL5D,OAKPiE,EALOmB,EAAA1K,KAAA0K,EAAA3K,KAAA,wBAAA2K,EAAA5K,KAAA,GAAA4K,EAAAvE,GAAAuE,EAAA,SAOPnN,QAAQ6I,MAARsE,EAAAvE,IACAF,GAAOG,MAAO,kCAAAsE,EAAAvE,KARPuE,EAAArE,OAAA,yBAAAqE,EAAA3K,KAAA,GAWoB1G,OAAA+L,EAAA,kBAAA/L,CAAkBkQ,EAAYtE,GAXlD,QAWLwF,EAXKC,EAAA1K,KAYXiG,GAAMsD,WAAYlQ,OAAA+L,EAAA,iBAAA/L,CAAiBoR,KAZxB,yBAAAC,EAAAzK,SAAAsK,EAAA3N,OAAA,WAAF,gBAAA+N,EAAAC,GAAA,OAAAN,EAAAzQ,MAAA+C,KAAAuD,YAAA,GAcb0K,gBAAe,eAAAC,EAAA/E,EAAAxG,mBAAAC,KAAE,SAAAuL,EAAO7J,EAAI+E,GAAX,IAAA9H,EAAAoL,EAAAR,EAAAiC,EAAAC,EAAA3J,EAAA,OAAA/B,mBAAAK,KAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,cACb4F,EAAKH,eADQ0F,EAAAnL,KAAA,EAEP4F,EAAK9H,MAAM+C,OAFJ,cAAAsK,EAAAnL,KAAA,EAGS4F,EAAK9H,MAAMoE,SAAS7G,IAAI8F,EAAGK,MAHpC,cAGPpD,EAHO+M,EAAAlL,KAAAkL,EAAApL,KAAA,EAAAoL,EAAAnL,KAAA,EAMU1G,OAAA+L,EAAA,kBAAA/L,CAAkB8E,EAAQzF,KAAK6Q,WAAY5D,EAAKL,gBAN1D,OAMTiE,EANS2B,EAAAlL,KAAAkL,EAAAnL,KAAA,wBAAAmL,EAAApL,KAAA,GAAAoL,EAAA/E,GAAA+E,EAAA,SAQT3N,QAAQ6I,MAAR8E,EAAA/E,IACAF,GAAOG,MAAO,kCAAA8E,EAAA/E,KATL+E,EAAA7E,OAAA,yBAYP0C,EAAW1P,OAAA+L,EAAA,uBAAA/L,CAAuBkQ,GAElCyB,EAAU,IAAIG,EAAA,OAAOjK,EAAG8J,QAASI,OAAO,OAdjCF,EAAAnL,KAAA,GAgBQ1G,OAAAuF,EAAA,EAAAvF,CAAc8E,EAAQzF,KAAKmG,OAAOgD,aAAawJ,SAASlN,EAAQzF,KAAKgG,SAhB7E,eAAAwM,EAAAhC,GAAAgC,EAAAlL,KAgBbkB,EAAGoK,MAAQ,EAhBEJ,EAAAhC,GAiBbhI,EAAGK,KAAOpD,EAAQzF,KAAKgG,QACvBwC,EAAG8J,OAASA,EAAOxP,MAAMwG,WAlBZkJ,EAAAnL,KAAA,GAmBG1G,OAAA+L,EAAA,gBAAA/L,CAAgB6H,EAAI6H,EAASwC,SAnBhC,eAmBbrK,EAAGsK,KAnBUN,EAAAlL,KAAAkL,EAAAnL,KAAA,GAqBG1G,OAAA+L,EAAA,gBAAA/L,CAAgB6H,EAAI,SArBvB,eAqBbA,EAAGE,KArBU8J,EAAAlL,KAwBbkB,EAAG8J,OAASA,EAAOhJ,WAEnBzE,QAAQC,IAAI0D,GAEN+J,EAAcnH,EAAa5C,EAAGE,MA5BvB8J,EAAApL,KAAA,GAAAoL,EAAAnL,KAAA,GA+BH1G,OAAAuF,EAAA,EAAAvF,CAAc8E,EAAQzF,KAAKmG,OAAOgD,aAAa4J,sBAAsBvK,GA/BlE,eAgCTA,EAAGE,KAAO6J,EACJ3J,GACFM,IAAK,IAAI8J,MAAQC,cACjBvN,QAAS,KACTmD,KAAI,GAAA9D,OAAKU,EAAQzF,KAAKmG,MAAlB,KAAApB,OAA2ByD,EAAGK,MAClCC,GAAE,GAAA/D,OAAKU,EAAQzF,KAAKmG,MAAlB,KAAApB,OAA2ByD,EAAGM,IAChCwJ,OAAQ9J,EAAG8J,OACXY,KAAM1K,EAAG0K,KACT9D,OAAQ,WAER5G,EAAG2K,QAAQ3S,SACXoI,EAAKwK,SAAW,GAAG5K,EAAG2K,QAAQ,IA3CzBX,EAAAnL,KAAA,GA6CH4F,EAAK9H,MAAMF,aAAawD,IAAI8J,EAAa3J,GA7CtC,QA8CT2E,GAAO/E,OA9CEgK,EAAAnL,KAAA,iBAAAmL,EAAApL,KAAA,GAAAoL,EAAA/B,GAAA+B,EAAA,UAgDT3N,QAAQ6I,MAAR8E,EAAA/B,IACAlD,GAAOG,MAAO,GAAA8E,EAAA/B,KAjDL,yBAAA+B,EAAAjL,SAAA8K,EAAAnO,OAAA,mBAAF,gBAAAmP,EAAAC,GAAA,OAAAlB,EAAAjR,MAAA+C,KAAAuD,YAAA,GAoDf8L,aAAY,eAAAC,EAAAnG,EAAAxG,mBAAAC,KAAE,SAAA2M,EAAOzN,EAASuH,GAAhB,IAAAmG,EAAAC,EAAAC,EAAA5L,EAAA,OAAAnB,mBAAAK,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,cAAAwM,EAAAxM,KAAA,EACJ4F,EAAK9H,MAAM+C,OADP,cAEJwL,EAASI,YAAYC,MAAM/N,EAASA,GAFhC6N,EAAAxM,KAAA,EAIY4F,EAAK9H,MAAMF,aAAa+O,YAAY,OAAQN,GAJxD,cAIJC,EAJIE,EAAAvM,KAAAuM,EAAAxM,KAAA,EAKU4F,EAAK9H,MAAMF,aAAa+O,YAAY,KAAMN,GALpD,OAKJE,EALIC,EAAAvM,MAOJU,EAAM2L,EAAQ5O,OAAO6O,GAAOK,OAAO,SAAS1R,GAC9C,OAAO2B,KAAKgQ,IAAI3R,EAAEmG,OAAgBxE,KAAKiQ,IAAI5R,EAAEmG,OAC9C,IAAI0L,MACHC,KAAK,SAAC9I,EAAG+I,GAAJ,OAAW/I,EAAEvL,KAAKkJ,GAAKoL,EAAEtU,KAAKkJ,GAAK,EAAKqC,EAAEvL,KAAKkJ,IAAMoL,EAAEtU,KAAKkJ,GAAK,GAAK,IAC/EqE,EAAKvF,GAXK,yBAAA6L,EAAAtM,SAAAkM,EAAAvP,SAAF,gBAAAqQ,EAAAC,GAAA,OAAAhB,EAAArS,MAAA+C,KAAAuD,YAAA,GAaZgN,iBAAgB,eAAAC,EAAArH,EAAAxG,mBAAAC,KAAE,SAAA6N,EAAO9O,EAAI0H,GAAX,IAAA9H,EAAAd,EAAA,OAAAkC,mBAAAK,KAAA,SAAA0N,GAAA,cAAAA,EAAAxN,KAAAwN,EAAAvN,MAAA,UACTxB,EADS,CAAA+O,EAAAvN,KAAA,eAAAuN,EAAAjH,OAAA,SACEJ,OADF,cAAAqH,EAAAvN,KAAA,EAER4F,EAAK9H,MAAM+C,OAFH,cAAA0M,EAAAvN,KAAA,EAGQ4F,EAAK9H,MAAMoE,SAAS7G,IAAImD,GAHhC,cAGRJ,EAHQmP,EAAAtN,KAAAsN,EAAAvN,KAAA,EAKM1G,OAAAuF,EAAA,EAAAvF,CAAc8E,EAAQzF,KAAKmG,OAAOgD,aAAaC,SAAS3D,EAAQzF,KAAKgG,SAL3E,OAKRrB,EALQiQ,EAAAtN,KAMd7B,EAAQzF,KAAKqJ,QAAU1E,EAAM0E,QAAQC,WACrCzE,QAAQC,IAAI,gBAAiBW,EAAQzF,KAAKgG,QAASrB,GACnDc,EAAQzF,KAAKqJ,QAAU1E,EAAM0E,QAAQC,WACrC2D,EAAK9H,MAAMoE,SAASd,IAAI5C,EAAIJ,EAAQzF,MACpCuN,EAAK9H,GAVS,yBAAAmP,EAAArN,SAAAoN,EAAAzQ,SAAF,gBAAA2Q,EAAAC,GAAA,OAAAJ,EAAAvT,MAAA+C,KAAAuD,YAAA,KAapBsN,IACI/H,EACAE,EACAF,EACA,SAACgI,GACOA,GAAKlQ,IAAI4I,MAAMsH,KAG3B9H,EAAMhD,GAAG,SAAU,SAAC+K,GAChB,IAAMC,EAAaD,EAAOC,WAAW7R,KAAK4R,GAC1ChI,EAAK/C,GAAG,SAAUgL,KAMtBhR,KAAKS,MAAMuF,GAAG,SAAU,SAACvF,GACrBsI,EAAKjI,KAAK,UAAYL,iYC5QlC,SAAAwQ,IAAA,IAAAC,EAIaC,EAJb,OAAAxO,mBAAAK,KAAA,SAAAoO,GAAA,cAAAA,EAAAlO,KAAAkO,EAAAjO,MAAA,OAIagO,EAJb,SAI4BE,GACpB,IAAMC,EAAcD,EAAWlT,KAC/BwC,QAAQC,IAAI,+BAAgC0Q,GAE5CJ,EAAWzQ,MAAML,IAAI,UAErB,IAAMmR,EAAa,IAAIC,EAAAnK,EAAWgK,GAClCH,EAAWO,mBAAmBF,GAE9BL,EAAWnJ,QAAQC,WAAY,EAC/B0J,IAAYH,EAAY,WACpBL,EAAWnJ,QAAQC,WAAY,EAC/BrH,QAAQC,IAAI,yBAA0B0Q,GACtCJ,EAAWzQ,MAAML,IAAI,eAhBvB8Q,EAAa,IAAI1J,GACvBK,EAAAR,EAAUS,QAAQ6J,UAAUC,YAAYT,GAF5C,wBAAAC,EAAA/N,SAAA4N,EAAAjR,gCAdAvC,EAAQ,IAQRkD,QAAQC,IAAI,kCACZD,QAAQC,IAAI,eAAgBiH,EAAAR,EAAUS,QAAQnG,wCAG9CkQ,GA4CAC,OAAOC,aAAaC,YACpBF,OAAOC,aAAa9S,QAChBgT,MAAO,iBACPC,UAAW,kBACXC,QAAS,WACLtK,EAAAR,EAAU+K,KAAKnT,QAAQ8C,IAAM,gBAIrC8F,EAAAR,EAAU+K,KAAKnT,QAAQ8C,IAAM,iCCnE7BjE,EAAAD,QAAiBJ,EAAA8B,EAAuB","file":"background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([208,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {EventEmitter} from 'events';\n\nconst IDLE_TIMEOUT = 60 * 1000;\n\nclass State extends EventEmitter {\n    constructor() {\n        super();\n        this._idleTimeout = null;\n        this.set('initial');\n    }\n\n    /**\n     * App states: initial -> active -> inactive -> idle\n     * Opening UI switches state to active. Closing UI switches state to inactive.\n     * After being inactive for a certain amount of time, switch to idle.\n     * @param {string} nextState \n     */\n    set(nextState) {\n        if (nextState != 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n        }\n        if (this.state != nextState && nextState == 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n            this._idleTimeout = setTimeout(() => {\n                this.set('idle');\n            }, IDLE_TIMEOUT);\n        }\n        if (this.state != nextState) {\n            console.log(`[state] ${this.state} -> ${nextState}`);\n        }\n        this.state = nextState;\n        this.emit('change', nextState);\n        this.emit(nextState);\n    }\n}\n\nexport default State;","import 'whatwg-fetch';\nimport { EventEmitter } from 'events';\nimport { DEFAULT_CHAIN, chainProvider } from './chain-provider';\n\nconst SYNC_INTERVAL = 15 * 1000;\n\nclass TransactionManager extends EventEmitter {\n    constructor(store) {\n        super();\n        this.intervals = {};\n        this.store = store;\n        this.lastBlockPromise = {};\n    }\n\n    async _getTransactionsSince(account, blockno, size=100, offset=0) {\n        console.log(`Getting txs for ${account.id} since ${blockno}...`);\n        const q = encodeURIComponent(`(from:${account.data.address} OR to:${account.data.address}) AND blockno:>${blockno}`);\n        const url = chainProvider(account.data.chain).apiUrl(`/transactions?q=${q}&sort=blockno:desc&size=${size}&from=${offset}`);\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(`Got ${data.hits.length} (of ${data.total}) txs for ${account.id} since ${blockno}.`);\n        return data.hits;\n    }\n\n    async _getBestBlock(account) {\n        if (this.lastBlockPromise[account.data.chain]) return await this.lastBlockPromise[account.data.chain];\n        this.lastBlockPromise[account.data.chain] = new Promise(async (resolve) => {\n            const url = chainProvider(account.data.chain).apiUrl(`/bestBlock`);\n            const response = await fetch(url);\n            const bestBlock = await response.json();\n            resolve(bestBlock);\n        });\n        const result = await this.lastBlockPromise[account.data.chain];\n        this.lastBlockPromise[account.data.chain] = null;\n        return result;\n    }\n\n    /**\n     * Start tracking an account for transactions using remote API\n     * @param {*} account \n     */\n    trackAccount(account) {\n        if (typeof this.intervals[account.id] !== 'undefined' && this.intervals[account.id] !== null) {\n            this.stopTrackingAccount(account);\n        }\n        let initialSyncDone = false;\n        const sync = async () => {\n            await this.store.open();\n            let lastBlockno = 0;\n            try {\n                lastBlockno = account.data.lastSync.blockno;\n            } catch(e) {}\n            const txs = await this._getTransactionsSince(account, lastBlockno);\n            await Promise.all(txs.map(tx => this.store.transactions.put(tx.hash, {\n                ...tx.meta,\n                from: `${account.data.chain}/${tx.meta.from}`,\n                to: `${account.data.chain}/${tx.meta.to}`,\n            })));\n            const bestBlock = await this._getBestBlock(account);\n            account.data.lastSync = {\n                blockno: bestBlock.meta.no,\n                time: bestBlock.meta.ts\n            }\n            if (txs.length > 0 || !initialSyncDone) {\n                // new tx, update account state\n                const state = await chainProvider(account.data.chain).nodeClient().getState(account.data.address);\n                account.data.balance = state.balance.toString();\n                initialSyncDone = true;\n            }\n            console.log(`[${account.id}] Saved ${txs.length} new txs, balance is ${account.data.balance}.`);\n            await this.store.accounts.put(account.id, account.data);\n        };\n        this.intervals[account.id] = setInterval(sync, SYNC_INTERVAL);\n        sync();\n    }\n    /**\n     * Stop tracking an address for transactions\n     * @param {*} address \n     */\n    stopTrackingAccount(account) {\n        clearInterval(this.intervals[account.id]);\n        this.intervals[account.id] = null;\n    }\n}\n\nexport default TransactionManager;","import 'whatwg-fetch';\nimport { EventEmitter } from 'events';\n\nclass AccountManager extends EventEmitter {\n    constructor(store, state, transactionManager) {\n        super();\n        this.intervals = {};\n        this.store = store;\n        this.state = state;\n        this.transactionManager = transactionManager;\n        this.accounts = [];\n        this.accountsById = {};\n        this.trackedAccounts = [];\n        this.initialLoad = false;\n\n        this.state.on('active', () => {\n            console.log('became active');\n            this.startTracking();\n        });\n\n        this.state.on('idle', () => {\n            console.log('became idle');\n            this.stopTracking();\n        });\n    }\n\n    async loadFromStore() {\n        await this.store.open();\n        this.accounts = await this.store.accounts.getAll();\n        for (let account of this.accounts) {\n            this.accountsById[account.id] = account;\n        }\n    }\n\n    async startTracking() {\n        await this.loadFromStore();\n        this.initialLoad = true;\n        for (let account of this.accounts) {\n            this.transactionManager.trackAccount(account);\n        }\n        this.trackedAccounts = [...this.accounts];\n        console.log(`Tracking ${this.trackedAccounts.length} accounts`);\n    }\n\n    async stopTracking() {\n        for (let account of this.trackedAccounts) {\n            this.transactionManager.stopTrackingAccount(account);\n        }\n    }\n}\n\nexport default AccountManager;","import extension from 'extensionizer';\nimport { EventEmitter } from 'events';\nimport pump from 'pump';\nimport Dnode from 'dnode/browser.js';\n\nimport { Amount } from '@herajs/client';\nimport {\n    createIdentity, identifyFromPrivateKey,\n    signTransaction, hashTransaction,\n    decryptPrivateKey, encryptPrivateKey,\n    encodePrivateKey\n} from '@herajs/crypto';\nimport Store from './store';\nimport State from './state';\nimport 'whatwg-fetch';\nimport { DEFAULT_CHAIN, chainProvider } from './chain-provider';\nimport TransactionManager from './transactions';\nimport AccountManager from './accounts';\n\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes) {\n    return bs58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string) {\n    return bs58.decode(bs58string);\n}\n\nconst AUTO_LOCK_TIMEOUT = 60*1000;\n\nclass BackgroundController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.id = extension.runtime.id;\n\n        this.uiState = {\n            popupOpen: false\n        }\n        this.aergo = chainProvider(DEFAULT_CHAIN).nodeClient();\n        this.store = new Store();\n\n        this.transactionManager = new TransactionManager(this.store);\n        \n        this.state = new State();\n        this._lockTimeout = null;\n        this.lock();\n\n        this.accountManager = new AccountManager(this.store, this.state, this.transactionManager);\n    }\n\n    async unlock (password) {\n        await this.store.open();\n        const encryptedId = await this.store.settings.get('encryptedId');\n        try {\n            const id = await decryptPrivateKey(encryptedId.data, password);\n        } catch (e) {\n            throw new Error('invalid passphrase');\n        }\n            \n        this.masterPassword = password;\n        this.unlocked = true;\n        this.emit('update', { unlocked: true });\n        this.keepUnlocked();\n        console.log('[lock] unlocked');\n    }\n\n    async setupAndUnlock (password) {\n        await this.store.open();\n        // save extension id encrypted using password for a quick check if password is correct later\n        const encryptedId = await encryptPrivateKey(Buffer.from(this.id), password);\n        await this.store.settings.put('encryptedId', encryptedId);\n        await this.store.settings.put('initialized', true);\n        await this.unlock(password);\n    }\n\n    keepUnlocked() {\n        if (this._lockTimeout) {\n            clearTimeout(this._lockTimeout);\n        }\n        this._lockTimeout = setTimeout(() => {\n            console.log('[lock] auto-locking...');\n            this.lock();\n        }, AUTO_LOCK_TIMEOUT);\n    }\n\n    lock () {\n        this.masterPassword = \"\";\n        this.unlocked = false;\n        this.emit('update', { unlocked: false });\n        console.log('[lock] locked');\n    }\n\n    isUiOpen() {\n        return this.uiState.popupOpen;\n    }\n\n    setupCommunication (outStream) {\n        // Setup async rpc stream to UI\n        const dnode = Dnode({\n            unlock: async ({ password }, send) => {\n                try {\n                    await this.unlock(password);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                    return;\n                }\n                send({});\n            },\n            lock: async (send) => {\n                this.lock();\n                send({});\n            },\n            setup: async ({ password }, send) => {\n                await this.setupAndUnlock(password);\n                send({});\n            },\n            isUnlocked: async (send) => {\n                send(this.unlocked);\n            },\n            reset: async (send) => {\n                await this.store.open();\n                await this.store.accounts.clear();\n                await this.store.transactions.clear();\n                await this.store.settings.clear();\n                send();\n            },\n            getBlockchainStatus: async (send) => {\n                const status = await this.aergo.blockchain();\n                send({\n                    blockHeight: status.bestHeight,\n                    chainId: DEFAULT_CHAIN\n                });\n            },\n            getAccounts: async (send) => {\n                this.keepUnlocked();\n                await this.store.open();\n                const accounts = await this.store.accounts.getAll();\n                send(accounts);\n            },\n            createAccount: async ({ network }, send) => {\n                this.keepUnlocked();\n                const chain = network || DEFAULT_CHAIN;\n                const identity = await createIdentity();\n                const createdAddress = identity.address;\n                await this.store.open();\n                await this.store.accounts.put(`${chain}/${createdAddress}`, {\n                    address: createdAddress,\n                    balance: '0 aer',\n                    publicKey: identity.publicKey.encodeCompressed(),\n                    privateKey: await encryptPrivateKey(Buffer.from(identity.privateKey.toArray()), this.masterPassword),\n                    chain: chain\n                });\n                this.accountManager.startTracking();\n                send({address: createdAddress});\n            },\n            importAccount: async ({ privateKey, network }, send) => {\n                this.keepUnlocked();\n                const chain = network || DEFAULT_CHAIN;\n                const identity = identifyFromPrivateKey(privateKey);\n                const createdAddress = identity.address;\n                await this.store.open();\n                await this.store.accounts.put(`${chain}/${createdAddress}`, {\n                    address: createdAddress,\n                    balance: '0 aer',\n                    publicKey: identity.publicKey.encodeCompressed(),\n                    privateKey: await encryptPrivateKey(Buffer.from(identity.privateKey.toArray()), this.masterPassword),\n                    chain: chain\n                });\n                this.accountManager.startTracking();\n                send({address: createdAddress});\n            },\n            exportAccount: async ({ id, password }, send) => {\n                this.keepUnlocked();\n                const account = await this.store.accounts.get(id);\n                let privateKey;\n                try {\n                    privateKey = await decryptPrivateKey(account.data.privateKey, this.masterPassword);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: 'Could not decrypt private key. '+e });\n                    return;\n                }\n                const privkeyEncrypted = await encryptPrivateKey(privateKey, password);\n                send({privateKey: encodePrivateKey(privkeyEncrypted)});\n            },\n            sendTransaction: async (tx, send) => {\n                this.keepUnlocked();\n                await this.store.open();\n                const account = await this.store.accounts.get(tx.from);\n                let privateKey;\n                try {\n                    privateKey = await decryptPrivateKey(account.data.privateKey, this.masterPassword);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: 'Could not decrypt private key. '+e });\n                    return;\n                }\n                const identity = identifyFromPrivateKey(privateKey);\n\n                const amount = (new Amount(tx.amount)).toUnit('aer');\n\n                tx.nonce = 1 + await chainProvider(account.data.chain).nodeClient().getNonce(account.data.address); // TODO: check if there's a local, non-confirmed tx\n                tx.from = account.data.address;\n                tx.amount = amount.value.toString();\n                tx.sign = await signTransaction(tx, identity.keyPair);\n                \n                tx.hash = await hashTransaction(tx, 'bytes');\n                // TODO: signTransaction only understands unitless number, string, or BigInt for amount\n                // but sendSignedTransaction assumes aergo if no unit given\n                tx.amount = amount.toString();\n\n                console.log(tx);\n\n                const encodedHash = encodeTxHash(tx.hash);\n\n                try {\n                    await chainProvider(account.data.chain).nodeClient().sendSignedTransaction(tx);\n                    tx.hash = encodedHash;\n                    const meta = {\n                        ts: (new Date()).toISOString(),\n                        blockno: null,\n                        from: `${account.data.chain}/${tx.from}`,\n                        to: `${account.data.chain}/${tx.to}`,\n                        amount: tx.amount,\n                        type: tx.type,\n                        status: 'pending'\n                    };\n                    if (tx.payload.length) {\n                        meta.payload0 = ''+tx.payload[0];\n                    }\n                    await this.store.transactions.put(encodedHash, meta);\n                    send({ tx });\n                } catch(e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                }\n            },\n            getAccountTx: async (address, send) => {\n                await this.store.open();\n                const range =  IDBKeyRange.bound(address, address);\n                // get all txs from or to this address\n                const txsFrom = await this.store.transactions.getAllIndex('from', range);\n                const txsTo = await this.store.transactions.getAllIndex('to', range);\n                // unique txs by hash\n                const txs = txsFrom.concat(txsTo).filter(function(o) {\n                    return this.has(o.hash) ? false : this.add(o.hash);\n                }, new Set());\n                txs.sort((a, b) => (a.data.ts < b.data.ts ? 1 : (a.data.ts == b.data.ts ? 0 : -1)));\n                send(txs);\n            },\n            syncAccountState: async (id, send) => {\n                if (!id) return send({});\n                await this.store.open();\n                const account = await this.store.accounts.get(id);\n                \n                const state = await chainProvider(account.data.chain).nodeClient().getState(account.data.address);\n                account.data.balance = state.balance.toString();\n                console.log('got new state', account.data.address, state);\n                account.data.balance = state.balance.toString();\n                this.store.accounts.put(id, account.data);\n                send(account);\n            }\n        })\n        pump(\n            outStream,\n            dnode,\n            outStream,\n            (err) => {\n                if (err) log.error(err);\n            }\n        );\n        dnode.on('remote', (remote) => {\n            const sendUpdate = remote.sendUpdate.bind(remote);\n            this.on('update', sendUpdate)\n        });\n\n        /*setInterval(() => {\n            this.emit('update', 'something');\n        }, 1000)*/\n        this.state.on('change', (state) => {\n            this.emit('update', { state });\n        });\n    }\n}\n\nexport default BackgroundController;","import \"regenerator-runtime/runtime\";\n\nrequire('./manifest.json');\n\nimport extension from 'extensionizer';\nimport endOfStream from 'end-of-stream';\nimport PortStream from 'extension-port-stream';\n\nimport BackgroundController from './controllers/background';\n\nconsole.log('AERGO Wallet Background Script');\nconsole.log('Extension ID', extension.runtime.id);\n\n\nsetupController();\n\nasync function setupController() {\n    const controller = new BackgroundController();\n    extension.runtime.onConnect.addListener(connectRemote);    \n\n    function connectRemote (remotePort) {\n        const processName = remotePort.name;\n        console.log('Establishing connection with', processName);\n\n        controller.state.set('active');\n    \n        const portStream = new PortStream(remotePort);\n        controller.setupCommunication(portStream);\n    \n        controller.uiState.popupOpen = true;\n        endOfStream(portStream, () => {\n            controller.uiState.popupOpen = false;\n            console.log('Closed connection with', processName);\n            controller.state.set('inactive');\n        })\n\n        /*\n\n        const notifId = '';\n        extension.notifications.create(\n            notifId,\n            {\n                type: 'basic',\n                title: 'Aergo Wallet',\n                iconUrl: extension.extension.getURL('0da81dee4755822e45e812c8ce30d733.png'),\n                message: `Hello from the Wallet! Established connection with ${processName}. Yes.`,\n            }\n        );\n        extension.notifications.onClicked.addListener((url) => {\n            if (!txId.startsWith('http')) return;\n            console.log('clicked on', e);\n            extension.tabs.create({ url });\n        });\n\n        */\n    }\n}\n\nchrome.contextMenus.removeAll();\nchrome.contextMenus.create({\n    title: \"Open full page\",\n    contexts: [\"browser_action\"],\n    onclick: function() {\n        extension.tabs.create({url : \"tab.html\"});\n    }\n});\n\nextension.tabs.create({url : \"tab.html\"});\n\n","module.exports = __webpack_public_path__ + \"manifest.json\";"],"sourceRoot":""}