{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/manifest.json","webpack:///./src/controllers/config.js","webpack:///./src/controllers/tx-scanner.js","webpack:///./src/controllers/state.js","webpack:///./src/controllers/background.js","webpack:///./src/background.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","config","chains","chainId","nodeUrl","tx_scanner_AergoscanTransactionScanner","AergoscanTransactionScanner","_classCallCheck","this","_createClass","wallet","next","_ref2","_asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","account","blockno","limit","baseUrl","address","q","size","offset","url","response","wrap","_context","prev","spec","abrupt","herajs","console","log","concat","encodeURIComponent","fetch","sent","json","hits","total","map","tx","herajs_wallet_iife","hash","from","meta","to","ts","blockhash","amount","type","status","Status","Confirmed","stop","_x","arguments","_this","_ref3","_callee3","accountSpec","_ref4","bestHeight","_context3","accountManager","getCompleteAccountSpec","getClient","blockchain","fetchAccountTransactionsBefore","_callee2","_context2","_x2","state","State","state_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_idleTimeout","set","events","nextState","_this2","clearTimeout","setTimeout","emit","background","BackgroundController","background_classCallCheck","background_possibleConstructorReturn","background_getPrototypeOf","id","extensionizer_default","a","runtime","uiState","popupOpen","_lockTimeout","appName","instanceId","use","useStorage","store","then","background_asyncToGenerator","customChains","_arr","_i","firstLoad","datastore","getIndex","keys","useChain","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","done","chain","err","return","keyManager","on","unlocked","pause","transactionManager","resume","lock","getAccounts","accounts","_iterator2","_iteratorNormalCompletion2","_step2","trackAccount","passphrase","unlock","keepUnlocked","setupAndUnlock","onceCb","_this3","accountTracker","removeAllListeners","outStream","_this4","dnode","browser_default","_unlock2","_callee5","send","password","_context5","error","_x3","_x4","_lock","_callee6","_context6","_x5","setup","_setup","_callee7","_context7","_x6","_x7","isUnlocked","_isUnlocked","_callee8","_context8","_x8","reset","_reset","_callee9","_context9","deleteAllData","_x9","addNetwork","_addNetwork","_callee10","_context10","put","_x10","_x11","getBlockchainStatus","_getBlockchainStatus","_callee11","_ref5","_context11","blockHeight","_x12","_x13","_getAccounts","_callee12","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context12","finish","_x14","createAccount","_createAccount","_callee13","_ref6","_context13","_x15","_x16","removeAccount","_removeAccount","_callee14","_ref7","_context14","_x17","_x18","importAccount","_importAccount","_callee15","_ref8","privateKey","identity","_context15","herajs_crypto_umd","addAccount","importKey","_x19","_x20","exportAccount","_exportAccount","_callee16","_ref9","privkeyEncrypted","_context16","getOrAddAccount","getUnlockedKey","_x21","_x22","sendTransaction","_sendTransaction","_callee17","txTracker","_context17","transaction","txBody","message","_x23","_x24","_x25","getAccountTx","_getAccountTx","_callee18","txs","_context18","getAccountTransactions","sort","b","_x26","_x27","syncAccountState","_syncAccountState","_callee19","_context19","_x28","_x29","signMessage","_signMessage","_callee20","_ref10","signedMessage","_context20","buffer","_x30","_x31","getStaking","_getStaking","_callee21","_ref11","_context21","toString","when","_x32","_x33","pump_default","remote","sendUpdate","controller","connectRemote","remotePort","processName","portStream","extension_port_stream_default","setupCommunication","end_of_stream_default","onConnect","addListener","setupController","chrome","contextMenus","removeAll","title","contexts","onclick","tabs"],"mappings":"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","file":"background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([315,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"manifest.json\";","export default {\n    chains: [\n        {\n            chainId: 'testnet.aergo.io',\n            nodeUrl: 'http://testnet.aergo.io:7845'\n        },\n        {\n            chainId: 'main.aergo.io',\n            nodeUrl: 'https://mainnet-api-http.aergo.io'\n        },\n        {\n            chainId: 'aergo.io',\n            nodeUrl: 'https://mainnet-api-http.aergo.io'\n        },\n        {\n            chainId: 'sqltestnet.aergo.io',\n            nodeUrl: 'https://sqltestnet-api-http.aergo.io'\n        },\n        {\n            chainId: 'dev.chain',\n            nodeUrl: 'http://127.0.0.1:7845'\n        }\n    ]\n};","import { Address } from '@herajs/client';\nimport { Transaction } from '@herajs/wallet';\n\n/**\n * This is a data source for transactionManager.getAccountTransactions.\n * It uses the Aergoscan API which is experimental and subject to change.\n * It is not recommended to use this data source.\n */\nexport class AergoscanTransactionScanner {\n    fetchAccountTransactionsAfter(wallet) {\n        return (next) => async ({ account, blockno, limit }) => {\n            const chainId = account.data.spec.chainId\n            if (chainId !== 'testnet.aergo.io' && chainId !== 'aergo.io') {\n                return next({ account, blockno, limit });\n            }\n            let baseUrl;\n            if (chainId == 'testnet.aergo.io') {\n                baseUrl = 'https://api.aergoscan.io/testnet';\n            }\n            if (chainId == 'aergo.io') {\n                baseUrl = 'https://api.aergoscan.io/main';\n            }\n            const address = new Address(account.data.spec.address);\n            console.log(`[track account] Fetching txs for ${address} on ${chainId} since ${blockno}...`);\n            const q = encodeURIComponent(`(from:${address} OR to:${address}) AND blockno:>${blockno}`);\n            \n            const size = 1000;\n            const offset = 0;\n            const url = `${baseUrl}/transactions?q=${q}&sort=blockno:desc&size=${size}&from=${offset}`;\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(`[track account] Got ${data.hits.length} (of ${data.total}) txs for ${address} since ${blockno}.`);\n            return data.hits.map(tx => new Transaction(tx.hash, {\n                chainId,\n                from: tx.meta.from,\n                to: tx.meta.to,\n                hash: tx.hash,\n                ts: tx.meta.ts,\n                blockhash: '', // TODO: remove or add?\n                blockno: tx.meta.blockno,\n                amount: tx.meta.amount,\n                type: tx.meta.type,\n                status: Transaction.Status.Confirmed\n            }));\n        };\n    }\n\n    fetchAccountTransactions(wallet) {\n        return () => async (account) => {\n            const accountSpec = wallet.accountManager.getCompleteAccountSpec(account.data.spec);\n            const { bestHeight } = await wallet.getClient(accountSpec.chainId).blockchain();\n            return this.fetchAccountTransactionsBefore(wallet)(async () => [])({ account, blockno: bestHeight });\n        };\n    }\n}","import {EventEmitter} from 'events';\n\nconst IDLE_TIMEOUT = 60 * 1000;\n\nclass State extends EventEmitter {\n    constructor() {\n        super();\n        this._idleTimeout = null;\n        this.set('initial');\n    }\n\n    /**\n     * App states: initial -> active -> inactive -> idle\n     * Opening UI switches state to active. Closing UI switches state to inactive.\n     * After being inactive for a certain amount of time, switch to idle.\n     * @param {string} nextState \n     */\n    set(nextState) {\n        if (nextState != 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n        }\n        if (this.state != nextState && nextState == 'inactive') {\n            if (this._idleTimeout) {\n                clearTimeout(this._idleTimeout);\n            }\n            this._idleTimeout = setTimeout(() => {\n                this.set('idle');\n            }, IDLE_TIMEOUT);\n        }\n        if (this.state != nextState) {\n            console.log(`[state] ${this.state} -> ${nextState}`);\n        }\n        this.state = nextState;\n        this.emit('change', nextState);\n        this.emit(nextState);\n    }\n}\n\nexport default State;","import extension from 'extensionizer';\nimport { EventEmitter } from 'events';\nimport pump from 'pump';\nimport Dnode from 'dnode/browser.js';\n\nimport { Wallet } from '@herajs/wallet';\nimport config from './config';\nimport store from './store';\nimport { AergoscanTransactionScanner } from './tx-scanner';\n\nimport {\n    identifyFromPrivateKey,\n    encryptPrivateKey,\n    encodePrivateKey\n} from '@herajs/crypto';\nimport State from './state';\nimport 'whatwg-fetch';\n\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\n\nexport function encodeTxHash(bytes) {\n    return bs58.encode(Buffer.from(bytes));\n}\n\nexport function decodeTxHash(bs58string) {\n    return bs58.decode(bs58string);\n}\n\nconst AUTO_LOCK_TIMEOUT = 60*1000;\n\nclass BackgroundController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.id = extension.runtime.id;\n\n        this.uiState = {\n            popupOpen: false\n        }\n        this.state = new State();\n        this._lockTimeout = null;\n\n        this.wallet = new Wallet({\n            appName: 'aergo-browser-wallet',\n            instanceId: this.id\n        });\n        this.wallet.use(AergoscanTransactionScanner);\n        this.wallet.useStorage(store).then(async () => {\n            this.firstLoad();\n            // Load custom defined chains\n            try {\n                const customChains = await this.wallet.datastore.getIndex('settings').get('customChains')\n                for (let chainId of Object.keys(customChains.data)) {\n                    this.wallet.useChain({ chainId, nodeUrl: customChains.data[chainId].nodeUrl});\n                }\n            } catch (e) {\n                // not found\n            }\n        });\n        for (let chain of config.chains) {\n            this.wallet.useChain(chain);\n        }\n\n        this.wallet.keyManager.on('lock', () => {\n            this.emit('update', { unlocked: false });\n            console.log('[lock] locked');\n        });\n        this.wallet.keyManager.on('unlock', () => {\n            this.emit('update', { unlocked: true });\n            console.log('[lock] unlocked');\n        });\n\n        this.state.on('idle', () => {\n            console.log('[state] idle, pausing trackers');\n            this.wallet.accountManager.pause();\n            this.wallet.transactionManager.pause();\n        });\n        this.state.on('active', () => {\n            console.log('[state] active, resuming trackers');\n            this.wallet.accountManager.resume();\n            this.wallet.transactionManager.resume();\n        });\n\n        this.lock();\n    }\n\n    async firstLoad() {\n        const accounts = await this.wallet.accountManager.getAccounts();\n        for (let account of accounts) {\n            this.trackAccount(account);\n        }\n    }\n\n    lock () {\n        this.wallet.lock();\n    }\n    \n    async unlock (passphrase) {\n        await this.wallet.unlock(passphrase);\n        this.keepUnlocked();\n    }\n\n    async setupAndUnlock (passphrase) {\n        await this.wallet.setupAndUnlock(passphrase);\n        this.keepUnlocked();\n    }\n\n    keepUnlocked() {\n        if (this._lockTimeout) {\n            clearTimeout(this._lockTimeout);\n        }\n        this._lockTimeout = setTimeout(() => {\n            console.log('[lock] auto-locking...');\n            this.lock();\n        }, AUTO_LOCK_TIMEOUT);\n    }\n\n    isUiOpen() {\n        return this.uiState.popupOpen;\n    }\n\n    trackAccount(account, onceCb) {\n        const accountTracker = this.wallet.accountManager.trackAccount(account);\n        this.wallet.transactionManager.trackAccount(account);\n        accountTracker.then(t => {\n            t.removeAllListeners('update');\n            t.on('update', account => {\n                console.log('got new state', account);\n                this.emit('update', { accounts: [account] });\n                if (onceCb) {\n                    onceCb(account);\n                    onceCb = false;\n                }\n            });\n        });\n    }\n\n    setupCommunication (outStream) {\n        // Setup async rpc stream to UI\n        const dnode = Dnode({\n            unlock: async ({ password }, send) => {\n                try {\n                    await this.unlock(password);\n                } catch (e) {\n                    console.error(e);\n                    send({ error: ''+e });\n                    return;\n                }\n                send({});\n            },\n            lock: async (send) => {\n                this.lock();\n                send({});\n            },\n            setup: async ({ password }, send) => {\n                await this.setupAndUnlock(password);\n                send({});\n            },\n            isUnlocked: async (send) => {\n                send(this.wallet.unlocked);\n            },\n            reset: async (send) => {\n                await this.wallet.deleteAllData();\n                send();\n            },\n            addNetwork: async ({ chainId, nodeUrl }, send) => {\n                console.log('Adding chain', { chainId, nodeUrl });\n                this.wallet.useChain({ chainId, nodeUrl });\n                let chains = {};\n                try {\n                    chains = (await this.wallet.datastore.getIndex('settings').get('customChains')).data;\n                } catch(e) {\n                    // not found\n                }\n                chains[chainId] = { chainId, nodeUrl };\n                await this.wallet.datastore.getIndex('settings').put({\n                    key: 'customChains',\n                    data: chains\n                });\n                send({});\n            },\n            getBlockchainStatus: async ({ chainId }, send) => {\n                const status = await this.wallet.getClient(chainId).blockchain();\n                send({\n                    blockHeight: status.bestHeight,\n                    chainId\n                });\n            },\n            getAccounts: async (send) => {\n                this.keepUnlocked();\n                const accounts = await this.wallet.accountManager.getAccounts();\n                for (let account of accounts) {\n                    this.trackAccount(account);\n                }\n                send(accounts);\n            },\n            createAccount: async ({ chainId }, send) => {\n                this.keepUnlocked();\n                \n                try {\n                    const account = await this.wallet.accountManager.createAccount(chainId);\n                    this.trackAccount(account);\n                    send(account.data.spec);\n                } catch(e) {\n                    send({error: e});\n                }\n            },\n            removeAccount: async ({ chainId, address }, send) => {\n                await this.wallet.accountManager.removeAccount({ chainId, address });\n                send();\n            },\n            importAccount: async ({ privateKey, chainId }, send) => {\n                this.keepUnlocked();\n                const identity = identifyFromPrivateKey(privateKey);\n                const address = identity.address;\n                try {\n                    const account = await this.wallet.accountManager.addAccount({ address, chainId });\n                    console.log('importAccount', account, privateKey);\n                    await this.wallet.keyManager.importKey({\n                        account: account,\n                        privateKey: privateKey\n                    });\n                    this.trackAccount(account);\n                    send(account.data.spec);\n                } catch(e) {\n                    console.error(e);\n                    send({ error: 'Could not import account. '+e });\n                }\n            },\n            exportAccount: async ({ address, chainId, password }, send) => {\n                this.keepUnlocked();\n                const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n                const key = await this.wallet.keyManager.getUnlockedKey(account);\n                console.log(account, key);\n                const privateKey = key.data.privateKey;\n                const privkeyEncrypted = await encryptPrivateKey(privateKey, password);\n                send({privateKey: encodePrivateKey(privkeyEncrypted)});\n            },\n            sendTransaction: async (tx, chainId, send) => {\n                this.keepUnlocked();\n                try {\n                    const txTracker = await this.wallet.sendTransaction({\n                        address: tx.from,\n                        chainId: chainId\n                    }, tx);\n                    console.log(txTracker, txTracker.transaction.txBody);\n                    send({ tx: txTracker.transaction.txBody });\n                } catch(e) {\n                    console.error(e);\n                    send({ error: e.message || ''+e });\n                }\n            },\n            getAccountTx: async (accountSpec, send) => {\n                console.log('getAccountTx', accountSpec);\n                if (!accountSpec.address) return send({});\n                const txs = await this.wallet.transactionManager.getAccountTransactions(accountSpec);\n                txs.sort((a, b) => (a.data.ts < b.data.ts ? 1 : (a.data.ts == b.data.ts ? 0 : -1)));\n                send(txs);\n            },\n            syncAccountState: async (accountSpec, send) => {\n                if (!accountSpec.address) return send({});\n                const account = await this.wallet.accountManager.getOrAddAccount(accountSpec);\n                this.trackAccount(account, send);\n            },\n            signMessage: async ({ address, chainId, message }, send) => {\n                this.keepUnlocked(); \n                try {\n                    const account = await this.wallet.accountManager.getOrAddAccount({ address, chainId });\n                    const signedMessage = await this.wallet.keyManager.signMessage(account, Buffer.from(message));\n                    send({ signedMessage });\n                } catch (e) {\n                    console.error(e);\n                    send({ error: e });\n                }\n            },\n            getStaking: async ({ address, chainId }, send) => {\n                this.keepUnlocked();\n                try {\n                    const result = await this.wallet.getClient(chainId).getStaking(address);\n                    send({\n                        amount: result.amount.toString(),\n                        when: result.when\n                    });\n                } catch(e) {\n                    send({ error: e });\n                }\n            }\n        })\n        pump(\n            outStream,\n            dnode,\n            outStream,\n            (err) => {\n                if (err) log.error(err);\n            }\n        );\n        dnode.on('remote', (remote) => {\n            const sendUpdate = remote.sendUpdate.bind(remote);\n            this.on('update', sendUpdate)\n        });\n\n        /*setInterval(() => {\n            this.emit('update', 'something');\n        }, 1000)*/\n        this.state.on('change', (state) => {\n            this.emit('update', { state });\n        });\n    }\n}\n\nexport default BackgroundController;","import \"regenerator-runtime/runtime\";\n\nrequire('./manifest.json');\n\nimport extension from 'extensionizer';\nimport endOfStream from 'end-of-stream';\nimport PortStream from 'extension-port-stream';\n\nimport BackgroundController from './controllers/background';\n\nconsole.log('AERGO Wallet Background Script');\nconsole.log('Extension ID', extension.runtime.id);\n\nsetupController();\n\nasync function setupController() {\n    const controller = new BackgroundController();\n    extension.runtime.onConnect.addListener(connectRemote);\n    \n    function connectRemote (remotePort) {\n        const processName = remotePort.name;\n        console.log('Establishing connection with', processName);\n\n        controller.state.set('active');\n    \n        const portStream = new PortStream(remotePort);\n        controller.setupCommunication(portStream);\n    \n        controller.uiState.popupOpen = true;\n        endOfStream(portStream, () => {\n            controller.uiState.popupOpen = false;\n            console.log('Closed connection with', processName);\n            controller.state.set('inactive');\n        })\n\n        /*\n\n        const notifId = '';\n        extension.notifications.create(\n            notifId,\n            {\n                type: 'basic',\n                title: 'Aergo Wallet',\n                iconUrl: extension.extension.getURL('0da81dee4755822e45e812c8ce30d733.png'),\n                message: `Hello from the Wallet! Established connection with ${processName}. Yes.`,\n            }\n        );\n        extension.notifications.onClicked.addListener((url) => {\n            if (!txId.startsWith('http')) return;\n            console.log('clicked on', e);\n            extension.tabs.create({ url });\n        });\n\n        */\n    }\n}\n\nchrome.contextMenus.removeAll();\nchrome.contextMenus.create({\n    title: \"Open full page\",\n    contexts: [\"browser_action\"],\n    onclick: function() {\n        extension.tabs.create({url : \"tab.html\"});\n    }\n});\n\nif (process.env.NODE_ENV === 'development') {\n    extension.tabs.create({url : \"tab.html\"});\n}\n"],"sourceRoot":""}